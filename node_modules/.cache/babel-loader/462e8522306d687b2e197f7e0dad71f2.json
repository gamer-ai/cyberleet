{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import _classCallCheck from\"/Users/muyangguo/Desktop/cyberleet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/muyangguo/Desktop/cyberleet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/muyangguo/Desktop/cyberleet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/muyangguo/Desktop/cyberleet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/muyangguo/Desktop/cyberleet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import ReactDOM from\"react-dom\";import*as THREE from\"three\";import{OrbitControls}from\"./OrbitControls.js\";import allQuestions from\"./data/all.json\";import\"./ThreeView.css\";import Swal from'sweetalert2';var ThreeView=/*#__PURE__*/function(_Component){_inherits(ThreeView,_Component);var _super=_createSuper(ThreeView);function ThreeView(props){var _this;_classCallCheck(this,ThreeView);_this=_super.call(this,props);_this.state={questionName:'',questionData:'',questionSlug:'',prequestionSlug:''};_this.animate=_this.animate.bind(_assertThisInitialized(_this));_this.onMouseDown=_this.onMouseDown.bind(_assertThisInitialized(_this));_this.onWindowResize=_this.onWindowResize.bind(_assertThisInitialized(_this));_this.initializeCamera=_this.initializeCamera.bind(_assertThisInitialized(_this));// this.initializeOrbits = this.initializeOrbits.bind(this);\nreturn _this;}_createClass(ThreeView,[{key:\"componentDidMount\",value:function componentDidMount(){var width=window.innerWidth;var height=window.innerHeight;this.scene=new THREE.Scene();this.camera=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,1,10000);this.renderer=new THREE.WebGLRenderer({antialias:true});this.controls=new OrbitControls(this.camera,this.renderer.domElement);this.controls.update();this.renderer.setSize(width,height);this.mount.appendChild(this.renderer.domElement);// this.initializeOrbits();\nthis.initializeCamera();this.cubesToBePicked=[];this.raycaster=new THREE.Raycaster();this.mouse=new THREE.Vector2();this.INTERSECTED=null;var worldsize=6000;this.plane=new THREE.Mesh(new THREE.PlaneGeometry(worldsize,worldsize,1),new THREE.MeshBasicMaterial({color:\"grey\",opacity:0.3,transparent:true}));this.plane.rotation.set(-Math.PI/2,0,0);this.scene.add(this.plane);var size=3000,step=40;var geometry,material,line;for(var i=-size;i<=size;i+=step){if(i/step%2===0){continue;}geometry=new THREE.Geometry();material=new THREE.LineBasicMaterial({color:\"purple\"});geometry.vertices.push(new THREE.Vector3(-size,0,i));geometry.vertices.push(new THREE.Vector3(size,0,i));this.line=new THREE.LineSegments(geometry,material);this.scene.add(this.line);}for(var _i=-size;_i<=size;_i+=step){if(_i/step%2===0){continue;}geometry=new THREE.Geometry();material=new THREE.LineBasicMaterial({color:\"green\"});geometry.vertices.push(new THREE.Vector3(_i,0,-size));geometry.vertices.push(new THREE.Vector3(_i,0,size));this.line=new THREE.LineSegments(geometry,material);this.scene.add(this.line);}var offset=2000,side=50,sidegap=80;for(var _i2=0;_i2<allQuestions.length;_i2+=1){var questionIndex=Number(allQuestions[_i2][\"id\"])-1;var bottommaterial;var difficulty;var questionData=allQuestions[_i2][\"content\"];if(allQuestions[_i2][\"difficulty\"]===\"1\"){bottommaterial=new THREE.MeshBasicMaterial({color:0x00cc00});difficulty='EASY';}else if(allQuestions[_i2][\"difficulty\"]===\"2\"){bottommaterial=new THREE.MeshBasicMaterial({color:0xff9900});difficulty='MEDIUM';}else{bottommaterial=new THREE.MeshBasicMaterial({color:0xD63333});difficulty='HARD';}var bottomgeometry=new THREE.BoxGeometry(60,20,60);var row=Math.floor(questionIndex/side);var col=questionIndex%side;bottomgeometry.translate(col*sidegap-offset,10,row*sidegap-offset);this.bottommesh=new THREE.Mesh(bottomgeometry,bottommaterial);this.bottommesh.name=allQuestions[_i2][\"id\"]+' - '+allQuestions[_i2][\"name\"].split('-').join(' ')+' - '+difficulty;this.bottommesh.userData=questionData;this.scene.add(this.bottommesh);this.cubesToBePicked.push(this.bottommesh);}window.addEventListener(\"resize\",this.onWindowResize,false);window.addEventListener('pointerdown',this.onMouseDown,false);this.animate();}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){cancelAnimationFrame(this.frameId);this.mount.removeChild(this.renderer.domElement);}},{key:\"onMouseDown\",value:function onMouseDown(event){var _this2=this;event.preventDefault();this.mouse.x=event.clientX/window.innerWidth*2-1;this.mouse.y=-(event.clientY/window.innerHeight)*2+1;this.raycaster.setFromCamera(this.mouse,this.camera);var intersects=this.raycaster.intersectObjects(this.cubesToBePicked);if(intersects.length>0){if(intersects[0].object!=this.INTERSECTED){if(this.INTERSECTED)this.INTERSECTED.material.color.setHex(this.INTERSECTED.currentHex);this.INTERSECTED=intersects[0].object;this.INTERSECTED.currentHex=this.INTERSECTED.material.color.getHex();this.INTERSECTED.material.color.setHex(0xFF00FF);this.setState(function(state){return(// this is the current state\n{prequestionSlug:state.questionSlug,// this will be the previous randomNumber\nquestionName:_this2.INTERSECTED.name,questionData:_this2.INTERSECTED.userData[\"content\"],questionSlug:_this2.INTERSECTED.userData[\"questionTitleSlug\"]});});// this.setState({questionName: this.INTERSECTED.name, questionData: this.INTERSECTED.userData[\"content\"], questionSlug: this.INTERSECTED.userData[\"questionTitleSlug\"], prequestionSlug: this.state.questionSlug});\n}}else//no intesections\n{if(this.INTERSECTED){this.INTERSECTED.material.color.setHex(this.INTERSECTED.currentHex);}this.INTERSECTED=null;this.setState(function(state){return(// this is the current state\n{prequestionSlug:state.questionSlug,// this will be the previous randomNumber\nquestionName:'',questionData:'',questionSlug:''});});//this.setState({questionName: '', questionData: '', questionSlug: '',prequestionSlug: this.state.questionSlug});\n}}},{key:\"onWindowResize\",value:function onWindowResize(){this.camera.aspect=window.innerWidth/window.innerHeight;this.camera.updateProjectionMatrix();this.renderer.setSize(window.innerWidth,window.innerHeight);}// initializeOrbits() {\n//     this.controls.rotateSpeed = 1.0;\n//     this.controls.zoomSpeed = 1.2;\n//     this.controls.panSpeed = 0.8;\n//   }\n},{key:\"initializeCamera\",value:function initializeCamera(){this.camera.position.x=0;this.camera.position.y=2000;this.camera.position.z=1500;this.controls.update();}},{key:\"animate\",value:function animate(){// this.raycaster.setFromCamera(this.mouse, this.camera);\n// const intersects = this.raycaster.intersectObjects(this.cubesToBePicked);\n// if (intersects.length > 0) {\n//     if (intersects[0].object != this.INTERSECTED) {\n//         if (this.INTERSECTED)\n//             this.INTERSECTED.material.color.setHex(this.INTERSECTED.currentHex);\n//         this.INTERSECTED = intersects[0].object;\n//         this.INTERSECTED.currentHex = this.INTERSECTED.material.color.getHex();\n//         this.INTERSECTED.material.color.setHex(0xFF00FF);\n//         this.setState({questionName: this.INTERSECTED.name, questionData: this.INTERSECTED.userData});\n//     }\n// }\n// else //no intesections\n// {\n//     if (this.INTERSECTED) {\n//         this.INTERSECTED.material.color.setHex(this.INTERSECTED.currentHex);\n//     }\n//     this.INTERSECTED = null;\n//     this.setState({questionName: '', questionData: ''});\n// }\nthis.frameId=window.requestAnimationFrame(this.animate);this.renderer.render(this.scene,this.camera);}},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"button\",{id:\"floatingButton\",className:\"btn orange\",onClick:function onClick(){return window.open(\"https://www.leetcode.com/problems/\"+_this3.state.prequestionSlug,\"_blank\");},children:[\"CYBER LEET_ : \",this.state.questionName]}),this.state.questionData&&/*#__PURE__*/_jsx(\"button\",{className:\"loading\",dangerouslySetInnerHTML:{__html:this.state.questionData}}),/*#__PURE__*/_jsx(\"div\",{id:\"ThreeViewer\",ref:function ref(mount){_this3.mount=mount;}}),/*#__PURE__*/_jsx(\"button\",{id:\"credits\",className:\"credits default\",onClick:function onClick(){return window.open(\"https://www.muyangguo.xyz/\",\"_blank\");},children:\"@ Muyang Guo \"})]})// <button id = \"footer\" className=\"credits orange\" onClick={()=> window.open(\"https://www.muyangguo.xyz/\" , \"_blank\")}> @ Muyang Guo </button>\n;}}]);return ThreeView;}(Component);export default ThreeView;","map":{"version":3,"sources":["/Users/muyangguo/Desktop/cyberleet/src/ThreeView.js"],"names":["React","Component","ReactDOM","THREE","OrbitControls","allQuestions","Swal","ThreeView","props","state","questionName","questionData","questionSlug","prequestionSlug","animate","bind","onMouseDown","onWindowResize","initializeCamera","width","window","innerWidth","height","innerHeight","scene","Scene","camera","PerspectiveCamera","renderer","WebGLRenderer","antialias","controls","domElement","update","setSize","mount","appendChild","cubesToBePicked","raycaster","Raycaster","mouse","Vector2","INTERSECTED","worldsize","plane","Mesh","PlaneGeometry","MeshBasicMaterial","color","opacity","transparent","rotation","set","Math","PI","add","size","step","geometry","material","line","i","Geometry","LineBasicMaterial","vertices","push","Vector3","LineSegments","offset","side","sidegap","length","questionIndex","Number","bottommaterial","difficulty","bottomgeometry","BoxGeometry","row","floor","col","translate","bottommesh","name","split","join","userData","addEventListener","cancelAnimationFrame","frameId","removeChild","event","preventDefault","x","clientX","y","clientY","setFromCamera","intersects","intersectObjects","object","setHex","currentHex","getHex","setState","aspect","updateProjectionMatrix","position","z","requestAnimationFrame","render","open","__html"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"./OrbitControls.js\";\nimport allQuestions from \"./data/all.json\";\nimport \"./ThreeView.css\";\nimport Swal from 'sweetalert2';\n\nclass ThreeView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {questionName: '', questionData: '', questionSlug: '', prequestionSlug: ''};\n    this.animate = this.animate.bind(this);\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onWindowResize = this.onWindowResize.bind(this);\n    this.initializeCamera = this.initializeCamera.bind(this);\n    // this.initializeOrbits = this.initializeOrbits.bind(this);\n  }\ncomponentDidMount() {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.PerspectiveCamera(\n        45,\n        window.innerWidth / window.innerHeight,\n        1,\n        10000\n    );\n\n    this.renderer = new THREE.WebGLRenderer({ antialias: true });\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n    this.controls.update();\n    this.renderer.setSize(width, height);\n    this.mount.appendChild(this.renderer.domElement);\n    // this.initializeOrbits();\n    this.initializeCamera();\n\n    this.cubesToBePicked = [];\n    this.raycaster = new THREE.Raycaster();\n    this.mouse = new THREE.Vector2();\n    this.INTERSECTED = null;\n    var worldsize = 6000;\n    this.plane = new THREE.Mesh(\n        new THREE.PlaneGeometry(worldsize, worldsize, 1),\n        new THREE.MeshBasicMaterial({\n            color: \"grey\",\n            opacity: 0.3,\n            transparent: true,\n        })\n    );\n    this.plane.rotation.set(-Math.PI / 2, 0, 0);\n    this.scene.add(this.plane);\n    var size = 3000,\n    step = 40;\n    var geometry, material, line;\n    for (let i = -size; i <= size; i += step) {\n        if ((i / step) % 2 === 0) {\n            continue;\n        }\n        geometry = new THREE.Geometry();\n        material = new THREE.LineBasicMaterial({\n            color: \"purple\",\n        });\n        geometry.vertices.push(new THREE.Vector3(-size, 0, i));\n        geometry.vertices.push(new THREE.Vector3(size, 0, i));\n        this.line = new THREE.LineSegments(geometry, material);\n        this.scene.add(this.line);\n    }\n    for (let i = -size; i <= size; i += step) {\n        if ((i / step) % 2 === 0) {\n            continue;\n        }\n        geometry = new THREE.Geometry();\n        material = new THREE.LineBasicMaterial({\n            color: \"green\",\n        });\n        geometry.vertices.push(new THREE.Vector3(i, 0, -size));\n        geometry.vertices.push(new THREE.Vector3(i, 0, size));\n        this.line = new THREE.LineSegments(geometry, material);\n        this.scene.add(this.line);\n    }\n\n    var offset = 2000,\n    side = 50,\n    sidegap = 80;\n    for (let i = 0; i < allQuestions.length; i += 1) {\n    var questionIndex = Number(allQuestions[i][\"id\"]) - 1;\n    var bottommaterial;\n    var difficulty;\n    var questionData = allQuestions[i][\"content\"];\n    if (allQuestions[i][\"difficulty\"] === \"1\") {\n        bottommaterial = new THREE.MeshBasicMaterial({ color: 0x00cc00 });\n        difficulty = 'EASY';\n    } else if (allQuestions[i][\"difficulty\"] === \"2\") {\n        bottommaterial = new THREE.MeshBasicMaterial({ color: 0xff9900 });\n        difficulty = 'MEDIUM';\n    } else {\n        bottommaterial = new THREE.MeshBasicMaterial({ color: 0xD63333 });\n        difficulty = 'HARD';\n    }\n    var bottomgeometry = new THREE.BoxGeometry(60, 20, 60);\n    var row = Math.floor(questionIndex / side);\n    var col = questionIndex % side;\n    bottomgeometry.translate(\n        col * sidegap - offset,\n        10,\n        row * sidegap - offset\n    );\n    this.bottommesh = new THREE.Mesh(bottomgeometry, bottommaterial);\n    \n   \n    this.bottommesh.name = allQuestions[i][\"id\"] + ' - ' + allQuestions[i][\"name\"].split('-').join(' ') + ' - ' + difficulty;\n    this.bottommesh.userData = questionData;\n    this.scene.add(this.bottommesh);\n    this.cubesToBePicked.push(this.bottommesh);\n\n}\n\n\n    window.addEventListener(\"resize\", this.onWindowResize, false);\n    window.addEventListener('pointerdown', this.onMouseDown, false);\n    this.animate();\n  }\ncomponentWillUnmount() {\n    cancelAnimationFrame(this.frameId);\n    this.mount.removeChild(this.renderer.domElement);\n  }\n\nonMouseDown(event) {\n    event.preventDefault();\n    this.mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n    this.mouse.y = - (event.clientY / window.innerHeight) * 2 + 1;\n    this.raycaster.setFromCamera(this.mouse, this.camera);\n    const intersects = this.raycaster.intersectObjects(this.cubesToBePicked);\n    if (intersects.length > 0) {\n        if (intersects[0].object != this.INTERSECTED) {\n            if (this.INTERSECTED)\n                this.INTERSECTED.material.color.setHex(this.INTERSECTED.currentHex);\n            this.INTERSECTED = intersects[0].object;\n            this.INTERSECTED.currentHex = this.INTERSECTED.material.color.getHex();\n            this.INTERSECTED.material.color.setHex(0xFF00FF);\n            this.setState((state) => (  // this is the current state\n              { \n                prequestionSlug: state.questionSlug, // this will be the previous randomNumber\n                questionName: this.INTERSECTED.name,\n                questionData: this.INTERSECTED.userData[\"content\"], \n                questionSlug: this.INTERSECTED.userData[\"questionTitleSlug\"]\n             }));\n            // this.setState({questionName: this.INTERSECTED.name, questionData: this.INTERSECTED.userData[\"content\"], questionSlug: this.INTERSECTED.userData[\"questionTitleSlug\"], prequestionSlug: this.state.questionSlug});\n            \n        }\n    }\n    else //no intesections\n    {\n        if (this.INTERSECTED) {\n            this.INTERSECTED.material.color.setHex(this.INTERSECTED.currentHex);\n        }\n        this.INTERSECTED = null;\n        this.setState((state) => (  // this is the current state\n          { \n            prequestionSlug: state.questionSlug, // this will be the previous randomNumber\n            questionName: '',\n            questionData: '', \n            questionSlug: ''\n         }));\n        //this.setState({questionName: '', questionData: '', questionSlug: '',prequestionSlug: this.state.questionSlug});\n      \n\n    }\n    \n}\n\n\nonWindowResize() {\n    this.camera.aspect = window.innerWidth / window.innerHeight;\n    this.camera.updateProjectionMatrix();\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n}\n// initializeOrbits() {\n//     this.controls.rotateSpeed = 1.0;\n//     this.controls.zoomSpeed = 1.2;\n//     this.controls.panSpeed = 0.8;\n//   }\ninitializeCamera() {\n    this.camera.position.x = 0;\n    this.camera.position.y = 2000;\n    this.camera.position.z = 1500;\n    this.controls.update();\n  }\nanimate() {\n    // this.raycaster.setFromCamera(this.mouse, this.camera);\n    // const intersects = this.raycaster.intersectObjects(this.cubesToBePicked);\n    // if (intersects.length > 0) {\n    //     if (intersects[0].object != this.INTERSECTED) {\n    //         if (this.INTERSECTED)\n    //             this.INTERSECTED.material.color.setHex(this.INTERSECTED.currentHex);\n    //         this.INTERSECTED = intersects[0].object;\n    //         this.INTERSECTED.currentHex = this.INTERSECTED.material.color.getHex();\n    //         this.INTERSECTED.material.color.setHex(0xFF00FF);\n    //         this.setState({questionName: this.INTERSECTED.name, questionData: this.INTERSECTED.userData});\n    //     }\n    // }\n    // else //no intesections\n    // {\n    //     if (this.INTERSECTED) {\n    //         this.INTERSECTED.material.color.setHex(this.INTERSECTED.currentHex);\n    //     }\n    //     this.INTERSECTED = null;\n    //     this.setState({questionName: '', questionData: ''});\n\n    // }\n    this.frameId = window.requestAnimationFrame(this.animate);\n    this.renderer.render(this.scene, this.camera);\n  }\n\n\n\nrender() {\n    return (\n      <div>\n        <button id = \"floatingButton\" className=\"btn orange\" onClick={()=> window.open(\"https://www.leetcode.com/problems/\" + this.state.prequestionSlug, \"_blank\")}>CYBER LEET_ : {this.state.questionName}</button>\n        {this.state.questionData && <button className=\"loading\" dangerouslySetInnerHTML={{ __html: this.state.questionData}}/>}\n        <div\n          id=\"ThreeViewer\"\n          ref={mount => {\n            this.mount = mount;\n          }}\n        />\n      <button id = \"credits\" className=\"credits default\" onClick={()=> window.open(\"https://www.muyangguo.xyz/\", \"_blank\")}>@ Muyang Guo </button>\n\n      </div>\n      // <button id = \"footer\" className=\"credits orange\" onClick={()=> window.open(\"https://www.muyangguo.xyz/\" , \"_blank\")}> @ Muyang Guo </button>\n    );\n  }\n}\nexport default ThreeView;"]},"metadata":{},"sourceType":"module"}