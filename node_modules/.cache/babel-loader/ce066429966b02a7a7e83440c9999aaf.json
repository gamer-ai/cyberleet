{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/muyangguo/Desktop/webgl/WebglPrototype/cybergraph/src/index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nimport { TrackballControls } from './TrackballControls.js';\nimport { CSS3DRenderer, CSS3DObject } from './CSS3DRenderer.js';\n\nclass App extends Component {\n  componentDidMount() {\n    // === THREE.JS CODE START ===\n    var camera, scene, renderer, controls;\n    init();\n    gridBackground();\n    animate();\n\n    function init() {\n      camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 1000);\n      camera.position.z = 500;\n      controls = new TrackballControls(camera);\n      controls.addEventListener('change', render);\n      scene = new THREE.Scene();\n      var geometry = new THREE.CubeGeometry(100, 100, 100);\n      var material = new THREE.MeshNormalMaterial();\n      var mesh = new THREE.Mesh(geometry, material);\n      scene.add(mesh);\n      renderer = new THREE.WebGLRenderer();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      document.body.appendChild(renderer.domElement);\n    }\n\n    function gridBackground() {\n      scene = new THREE.Scene();\n      camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 10000);\n      camera.position.set(0, 100, 20); // camera.lookAt(scene.position); \n\n      renderer = new THREE.WebGLRenderer();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      document.body.appendChild(renderer.domElement);\n      var size = 1000,\n          step = 50;\n\n      for (var i = -size; i <= size; i += step) {\n        var geometry = new THREE.Geometry();\n        var material = new THREE.LineBasicMaterial({\n          color: 'purple',\n          linewidth: 100,\n          linejoin: \"round\"\n        });\n        geometry.vertices.push(new THREE.Vector3(-size, -1, i));\n        geometry.vertices.push(new THREE.Vector3(size, -1, i));\n        var line = new THREE.Line(geometry, material, THREE.LinePieces);\n        scene.add(line);\n      }\n\n      for (var i = -size; i <= size; i += step) {\n        var geometry = new THREE.Geometry();\n        var material = new THREE.LineBasicMaterial({\n          color: 'green',\n          linewidth: 100\n        });\n        geometry.vertices.push(new THREE.Vector3(i, -1, -size));\n        geometry.vertices.push(new THREE.Vector3(i, -1, size));\n        var line = new THREE.Line(geometry, material, THREE.LinePieces);\n        scene.add(line);\n      }\n\n      render();\n    }\n\n    function animate() {\n      requestAnimationFrame(animate);\n      controls.update();\n    }\n\n    function render() {\n      renderer.render(scene, camera);\n    } //---------grid above--------//\n    // const table = [\n    //   \"Two Sum\",\n    //   \"Add Two Numbers\"\n    // ];\n    // const difficultyLevel = [\"Easy\", \"Medium\"];\n    // var scene = new THREE.Scene();\n    // var camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 1000 );\n    // const objects = [];\n    // const targets = { table: [], sphere: [], helix: [], grid: [] }\n    // for ( let i = 0; i < table.length; i += 1 ) {\n    // \t\t\tconst element = document.createElement( 'div' );\n    // \t\t\telement.className = 'element';\n    // \t\t\telement.style.backgroundColor = 'rgba(0,127,127,' + ( Math.random() * 0.5 + 0.25 ) + ')';\n    // \t\t\tconst number = document.createElement( 'div' );\n    // \t\t\tnumber.className = 'number';\n    // \t\t\tnumber.textContent = i + 1;\n    // \t\t\telement.appendChild( number );\n    // \t\t\tconst symbol = document.createElement( 'div' );\n    // \t\t\tsymbol.className = 'symbol';\n    // \t\t\tsymbol.textContent = table[ i ];\n    // \t\t\telement.appendChild( symbol );\n    // \t\t\tconst details = document.createElement( 'div' );\n    // \t\t\tdetails.className = 'details';\n    // \t\t\tdetails.innerHTML = difficultyLevel[ i ] + '<br>';\n    // \t\t\telement.appendChild( details );\n    // \t\t\tconst objectCSS = new CSS3DObject( element );\n    // \t\t\tobjectCSS.position.x = i*40;\n    // \t\t\tobjectCSS.position.y = 10;\n    // \t\t\tobjectCSS.position.z = 1;\n    // \t\t\tscene.add( objectCSS );\n    // \t\t\tobjects.push( objectCSS );\n    // \t\t\t//\n    // \t\t\tconst object = new THREE.Object3D();\n    // \t\t\tobject.position.x = ( i * 10 ) ;\n    // \t\t\tobject.position.y = -( i * 10  ) ;\n    // \t\t\ttargets.table.push( object );\n    // \t\t}\n    //     //\n    // var renderer = new CSS3DRenderer();\n    // renderer.setSize( window.innerWidth, window.innerHeight );\n    // document.body.appendChild( renderer.domElement );\n    // camera.position.z = 300;\n    // var animate = function () {\n    //    renderer.render( scene, camera );\n    // };\n    // animate();\n    // === THREE.JS EXAMPLE CODE END ===\n\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 129,\n  columnNumber: 17\n}, this), rootElement);","map":{"version":3,"sources":["/Users/muyangguo/Desktop/webgl/WebglPrototype/cybergraph/src/index.js"],"names":["React","Component","ReactDOM","THREE","TrackballControls","CSS3DRenderer","CSS3DObject","App","componentDidMount","camera","scene","renderer","controls","init","gridBackground","animate","PerspectiveCamera","window","innerWidth","innerHeight","position","z","addEventListener","render","Scene","geometry","CubeGeometry","material","MeshNormalMaterial","mesh","Mesh","add","WebGLRenderer","setSize","document","body","appendChild","domElement","set","size","step","i","Geometry","LineBasicMaterial","color","linewidth","linejoin","vertices","push","Vector3","line","Line","LinePieces","requestAnimationFrame","update","rootElement","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nimport { TrackballControls } from './TrackballControls.js';\nimport { CSS3DRenderer, CSS3DObject } from './CSS3DRenderer.js';\nclass App extends Component {\n  componentDidMount() {\n    // === THREE.JS CODE START ===\n    var camera, scene, renderer, controls;\n    init();\n    gridBackground();\n    animate();\n  function init(){\n      camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 1000);\n      camera.position.z = 500;\n\n      controls = new TrackballControls( camera );\n      controls.addEventListener('change', render);\n\n      scene = new THREE.Scene();\n      \n      var geometry = new THREE.CubeGeometry(100,100,100);\n      var material = new THREE.MeshNormalMaterial();\n\n      var mesh = new THREE.Mesh( geometry, material);\n      scene.add(mesh);\n\n      renderer = new THREE.WebGLRenderer();\n      renderer.setSize(window.innerWidth, window.innerHeight)\n      document.body.appendChild(renderer.domElement);\n  }\n\n    function gridBackground(){\n        scene = new THREE.Scene();\n        camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 10000);\n        camera.position.set(0,100,20);\n        // camera.lookAt(scene.position); \n        renderer = new THREE.WebGLRenderer();\n        renderer.setSize(window.innerWidth, window.innerHeight)\n        document.body.appendChild(renderer.domElement);\n        var size  = 1000, step = 50;\n        for ( var i = -size; i <= size; i += step){\n            var geometry = new THREE.Geometry();\n            var material = new THREE.LineBasicMaterial({color: 'purple', linewidth:100, linejoin:\"round\"});\n            geometry.vertices.push(new THREE.Vector3( - size, - 1, i ));\n            geometry.vertices.push(new THREE.Vector3( size, - 1, i ));\n            var line = new THREE.Line( geometry, material, THREE.LinePieces);\n            scene.add(line);\n        }\n        for ( var i = -size; i <= size; i += step){\n          var geometry = new THREE.Geometry();\n          var material = new THREE.LineBasicMaterial({color: 'green', linewidth:100});\n          geometry.vertices.push(new THREE.Vector3( i, -1, - size ));\n          geometry.vertices.push(new THREE.Vector3( i, - 1, size ));\n          var line = new THREE.Line( geometry, material, THREE.LinePieces);\n          scene.add(line);\n      }\n      render();\n    }\n\n    function animate(){\n      requestAnimationFrame( animate );\n      controls.update();\n  }\n    function render() {\n\n        renderer.render( scene, camera );\n\n    }\n\n    //---------grid above--------//\n    // const table = [\n    //   \"Two Sum\",\n    //   \"Add Two Numbers\"\n    // ];\n    // const difficultyLevel = [\"Easy\", \"Medium\"];\n    // var scene = new THREE.Scene();\n    // var camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 1000 );\n    // const objects = [];\n    // const targets = { table: [], sphere: [], helix: [], grid: [] }\n\t\t// for ( let i = 0; i < table.length; i += 1 ) {\n\t\t// \t\t\tconst element = document.createElement( 'div' );\n\t\t// \t\t\telement.className = 'element';\n\t\t// \t\t\telement.style.backgroundColor = 'rgba(0,127,127,' + ( Math.random() * 0.5 + 0.25 ) + ')';\n\t\t// \t\t\tconst number = document.createElement( 'div' );\n\t\t// \t\t\tnumber.className = 'number';\n\t\t// \t\t\tnumber.textContent = i + 1;\n\t\t// \t\t\telement.appendChild( number );\n\t\t// \t\t\tconst symbol = document.createElement( 'div' );\n\t\t// \t\t\tsymbol.className = 'symbol';\n\t\t// \t\t\tsymbol.textContent = table[ i ];\n\t\t// \t\t\telement.appendChild( symbol );\n\t\t// \t\t\tconst details = document.createElement( 'div' );\n\t\t// \t\t\tdetails.className = 'details';\n\t\t// \t\t\tdetails.innerHTML = difficultyLevel[ i ] + '<br>';\n\t\t// \t\t\telement.appendChild( details );\n\t\t// \t\t\tconst objectCSS = new CSS3DObject( element );\n\t\t// \t\t\tobjectCSS.position.x = i*40;\n\t\t// \t\t\tobjectCSS.position.y = 10;\n\t\t// \t\t\tobjectCSS.position.z = 1;\n\t\t// \t\t\tscene.add( objectCSS );\n\t\t// \t\t\tobjects.push( objectCSS );\n\t\t// \t\t\t//\n\t\t// \t\t\tconst object = new THREE.Object3D();\n\t\t// \t\t\tobject.position.x = ( i * 10 ) ;\n\t\t// \t\t\tobject.position.y = -( i * 10  ) ;\n\t\t// \t\t\ttargets.table.push( object );\n\t\t// \t\t}\n    //     //\n\n    // var renderer = new CSS3DRenderer();\n    // renderer.setSize( window.innerWidth, window.innerHeight );\n    // document.body.appendChild( renderer.domElement );\n    // camera.position.z = 300;\n\n    // var animate = function () {\n    //    renderer.render( scene, camera );\n    // };\n    // animate();\n    // === THREE.JS EXAMPLE CODE END ===\n  }\n  render() {\n    return (\n      <div />\n    )\n  }\n}\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);"]},"metadata":{},"sourceType":"module"}