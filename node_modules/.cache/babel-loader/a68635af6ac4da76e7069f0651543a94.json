{"ast":null,"code":"// import {\n// \tEventDispatcher,\n// \tMOUSE,\n// \tQuaternion,\n// \tVector2,\n// \tVector3\n// } from \"three\";\n// var TrackballControls = function ( object, domElement ) {\n// \tif ( domElement === undefined ) console.warn( 'THREE.TrackballControls: The second parameter \"domElement\" is now mandatory.' );\n// \tif ( domElement === document ) console.error( 'THREE.TrackballControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n// \tvar scope = this;\n// \tvar STATE = { NONE: - 1, ROTATE: 0, ZOOM: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_ZOOM_PAN: 4 };\n// \tthis.object = object;\n// \tthis.domElement = domElement;\n// \t// API\n// \tthis.enabled = true;\n// \tthis.screen = { left: 0, top: 0, width: 0, height: 0 };\n// \tthis.rotateSpeed = 1.0;\n// \tthis.zoomSpeed = 1.2;\n// \tthis.panSpeed = 0.3;\n// \tthis.noRotate = false;\n// \tthis.noZoom = false;\n// \tthis.noPan = false;\n// \tthis.staticMoving = false;\n// \tthis.dynamicDampingFactor = 0.2;\n// \tthis.minDistance = 0;\n// \tthis.maxDistance = Infinity;\n// \tthis.keys = [ 65 /*A*/, 83 /*S*/, 68 /*D*/ ];\n// \tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.ZOOM, RIGHT: MOUSE.PAN };\n// \t// internals\n// \tthis.target = new Vector3();\n// \tvar EPS = 0.000001;\n// \tvar lastPosition = new Vector3();\n// \tvar lastZoom = 1;\n// \tvar _state = STATE.NONE,\n// \t\t_keyState = STATE.NONE,\n// \t\t_eye = new Vector3(),\n// \t\t_movePrev = new Vector2(),\n// \t\t_moveCurr = new Vector2(),\n// \t\t_lastAxis = new Vector3(),\n// \t\t_lastAngle = 0,\n// \t\t_zoomStart = new Vector2(),\n// \t\t_zoomEnd = new Vector2(),\n// \t\t_touchZoomDistanceStart = 0,\n// \t\t_touchZoomDistanceEnd = 0,\n// \t\t_panStart = new Vector2(),\n// \t\t_panEnd = new Vector2();\n// \t// for reset\n// \tthis.target0 = this.target.clone();\n// \tthis.position0 = this.object.position.clone();\n// \tthis.up0 = this.object.up.clone();\n// \tthis.zoom0 = this.object.zoom;\n// \t// events\n// \tvar changeEvent = { type: 'change' };\n// \tvar startEvent = { type: 'start' };\n// \tvar endEvent = { type: 'end' };\n// \t// methods\n// \tthis.handleResize = function () {\n// \t\tvar box = scope.domElement.getBoundingClientRect();\n// \t\t// adjustments come from similar code in the jquery offset() function\n// \t\tvar d = scope.domElement.ownerDocument.documentElement;\n// \t\tscope.screen.left = box.left + window.pageXOffset - d.clientLeft;\n// \t\tscope.screen.top = box.top + window.pageYOffset - d.clientTop;\n// \t\tscope.screen.width = box.width;\n// \t\tscope.screen.height = box.height;\n// \t};\n// \tvar getMouseOnScreen = ( function () {\n// \t\tvar vector = new Vector2();\n// \t\treturn function getMouseOnScreen( pageX, pageY ) {\n// \t\t\tvector.set(\n// \t\t\t\t( pageX - scope.screen.left ) / scope.screen.width,\n// \t\t\t\t( pageY - scope.screen.top ) / scope.screen.height\n// \t\t\t);\n// \t\t\treturn vector;\n// \t\t};\n// \t}() );\n// \tvar getMouseOnCircle = ( function () {\n// \t\tvar vector = new Vector2();\n// \t\treturn function getMouseOnCircle( pageX, pageY ) {\n// \t\t\tvector.set(\n// \t\t\t\t( ( pageX - scope.screen.width * 0.5 - scope.screen.left ) / ( scope.screen.width * 0.5 ) ),\n// \t\t\t\t( ( scope.screen.height + 2 * ( scope.screen.top - pageY ) ) / scope.screen.width ) // screen.width intentional\n// \t\t\t);\n// \t\t\treturn vector;\n// \t\t};\n// \t}() );\n// \tthis.rotateCamera = ( function () {\n// \t\tvar axis = new Vector3(),\n// \t\t\tquaternion = new Quaternion(),\n// \t\t\teyeDirection = new Vector3(),\n// \t\t\tobjectUpDirection = new Vector3(),\n// \t\t\tobjectSidewaysDirection = new Vector3(),\n// \t\t\tmoveDirection = new Vector3(),\n// \t\t\tangle;\n// \t\treturn function rotateCamera() {\n// \t\t\tmoveDirection.set( _moveCurr.x - _movePrev.x, _moveCurr.y - _movePrev.y, 0 );\n// \t\t\tangle = moveDirection.length();\n// \t\t\tif ( angle ) {\n// \t\t\t\t_eye.copy( scope.object.position ).sub( scope.target );\n// \t\t\t\teyeDirection.copy( _eye ).normalize();\n// \t\t\t\tobjectUpDirection.copy( scope.object.up ).normalize();\n// \t\t\t\tobjectSidewaysDirection.crossVectors( objectUpDirection, eyeDirection ).normalize();\n// \t\t\t\tobjectUpDirection.setLength( _moveCurr.y - _movePrev.y );\n// \t\t\t\tobjectSidewaysDirection.setLength( _moveCurr.x - _movePrev.x );\n// \t\t\t\tmoveDirection.copy( objectUpDirection.add( objectSidewaysDirection ) );\n// \t\t\t\taxis.crossVectors( moveDirection, _eye ).normalize();\n// \t\t\t\tangle *= scope.rotateSpeed;\n// \t\t\t\tquaternion.setFromAxisAngle( axis, angle );\n// \t\t\t\t_eye.applyQuaternion( quaternion );\n// \t\t\t\tscope.object.up.applyQuaternion( quaternion );\n// \t\t\t\t_lastAxis.copy( axis );\n// \t\t\t\t_lastAngle = angle;\n// \t\t\t} else if ( ! scope.staticMoving && _lastAngle ) {\n// \t\t\t\t_lastAngle *= Math.sqrt( 1.0 - scope.dynamicDampingFactor );\n// \t\t\t\t_eye.copy( scope.object.position ).sub( scope.target );\n// \t\t\t\tquaternion.setFromAxisAngle( _lastAxis, _lastAngle );\n// \t\t\t\t_eye.applyQuaternion( quaternion );\n// \t\t\t\tscope.object.up.applyQuaternion( quaternion );\n// \t\t\t}\n// \t\t\t_movePrev.copy( _moveCurr );\n// \t\t};\n// \t}() );\n// \tthis.zoomCamera = function () {\n// \t\tvar factor;\n// \t\tif ( _state === STATE.TOUCH_ZOOM_PAN ) {\n// \t\t\tfactor = _touchZoomDistanceStart / _touchZoomDistanceEnd;\n// \t\t\t_touchZoomDistanceStart = _touchZoomDistanceEnd;\n// \t\t\tif ( scope.object.isPerspectiveCamera ) {\n// \t\t\t\t_eye.multiplyScalar( factor );\n// \t\t\t} else if ( scope.object.isOrthographicCamera ) {\n// \t\t\t\tscope.object.zoom *= factor;\n// \t\t\t\tscope.object.updateProjectionMatrix();\n// \t\t\t} else {\n// \t\t\t\tconsole.warn( 'THREE.TrackballControls: Unsupported camera type' );\n// \t\t\t}\n// \t\t} else {\n// \t\t\tfactor = 1.0 + ( _zoomEnd.y - _zoomStart.y ) * scope.zoomSpeed;\n// \t\t\tif ( factor !== 1.0 && factor > 0.0 ) {\n// \t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n// \t\t\t\t\t_eye.multiplyScalar( factor );\n// \t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n// \t\t\t\t\tscope.object.zoom /= factor;\n// \t\t\t\t\tscope.object.updateProjectionMatrix();\n// \t\t\t\t} else {\n// \t\t\t\t\tconsole.warn( 'THREE.TrackballControls: Unsupported camera type' );\n// \t\t\t\t}\n// \t\t\t}\n// \t\t\tif ( scope.staticMoving ) {\n// \t\t\t\t_zoomStart.copy( _zoomEnd );\n// \t\t\t} else {\n// \t\t\t\t_zoomStart.y += ( _zoomEnd.y - _zoomStart.y ) * this.dynamicDampingFactor;\n// \t\t\t}\n// \t\t}\n// \t};\n// \tthis.panCamera = ( function () {\n// \t\tvar mouseChange = new Vector2(),\n// \t\t\tobjectUp = new Vector3(),\n// \t\t\tpan = new Vector3();\n// \t\treturn function panCamera() {\n// \t\t\tmouseChange.copy( _panEnd ).sub( _panStart );\n// \t\t\tif ( mouseChange.lengthSq() ) {\n// \t\t\t\tif ( scope.object.isOrthographicCamera ) {\n// \t\t\t\t\tvar scale_x = ( scope.object.right - scope.object.left ) / scope.object.zoom / scope.domElement.clientWidth;\n// \t\t\t\t\tvar scale_y = ( scope.object.top - scope.object.bottom ) / scope.object.zoom / scope.domElement.clientWidth;\n// \t\t\t\t\tmouseChange.x *= scale_x;\n// \t\t\t\t\tmouseChange.y *= scale_y;\n// \t\t\t\t}\n// \t\t\t\tmouseChange.multiplyScalar( _eye.length() * scope.panSpeed );\n// \t\t\t\tpan.copy( _eye ).cross( scope.object.up ).setLength( mouseChange.x );\n// \t\t\t\tpan.add( objectUp.copy( scope.object.up ).setLength( mouseChange.y ) );\n// \t\t\t\tscope.object.position.add( pan );\n// \t\t\t\tscope.target.add( pan );\n// \t\t\t\tif ( scope.staticMoving ) {\n// \t\t\t\t\t_panStart.copy( _panEnd );\n// \t\t\t\t} else {\n// \t\t\t\t\t_panStart.add( mouseChange.subVectors( _panEnd, _panStart ).multiplyScalar( scope.dynamicDampingFactor ) );\n// \t\t\t\t}\n// \t\t\t}\n// \t\t};\n// \t}() );\n// \tthis.checkDistances = function () {\n// \t\tif ( ! scope.noZoom || ! scope.noPan ) {\n// \t\t\tif ( _eye.lengthSq() > scope.maxDistance * scope.maxDistance ) {\n// \t\t\t\tscope.object.position.addVectors( scope.target, _eye.setLength( scope.maxDistance ) );\n// \t\t\t\t_zoomStart.copy( _zoomEnd );\n// \t\t\t}\n// \t\t\tif ( _eye.lengthSq() < scope.minDistance * scope.minDistance ) {\n// \t\t\t\tscope.object.position.addVectors( scope.target, _eye.setLength( scope.minDistance ) );\n// \t\t\t\t_zoomStart.copy( _zoomEnd );\n// \t\t\t}\n// \t\t}\n// \t};\n// \tthis.update = function () {\n// \t\t_eye.subVectors( scope.object.position, scope.target );\n// \t\tif ( ! scope.noRotate ) {\n// \t\t\tscope.rotateCamera();\n// \t\t}\n// \t\tif ( ! scope.noZoom ) {\n// \t\t\tscope.zoomCamera();\n// \t\t}\n// \t\tif ( ! scope.noPan ) {\n// \t\t\tscope.panCamera();\n// \t\t}\n// \t\tscope.object.position.addVectors( scope.target, _eye );\n// \t\tif ( scope.object.isPerspectiveCamera ) {\n// \t\t\tscope.checkDistances();\n// \t\t\tscope.object.lookAt( scope.target );\n// \t\t\tif ( lastPosition.distanceToSquared( scope.object.position ) > EPS ) {\n// \t\t\t\tscope.dispatchEvent( changeEvent );\n// \t\t\t\tlastPosition.copy( scope.object.position );\n// \t\t\t}\n// \t\t} else if ( scope.object.isOrthographicCamera ) {\n// \t\t\tscope.object.lookAt( scope.target );\n// \t\t\tif ( lastPosition.distanceToSquared( scope.object.position ) > EPS || lastZoom !== scope.object.zoom ) {\n// \t\t\t\tscope.dispatchEvent( changeEvent );\n// \t\t\t\tlastPosition.copy( scope.object.position );\n// \t\t\t\tlastZoom = scope.object.zoom;\n// \t\t\t}\n// \t\t} else {\n// \t\t\tconsole.warn( 'THREE.TrackballControls: Unsupported camera type' );\n// \t\t}\n// \t};\n// \tthis.reset = function () {\n// \t\t_state = STATE.NONE;\n// \t\t_keyState = STATE.NONE;\n// \t\tscope.target.copy( scope.target0 );\n// \t\tscope.object.position.copy( scope.position0 );\n// \t\tscope.object.up.copy( scope.up0 );\n// \t\tscope.object.zoom = scope.zoom0;\n// \t\tscope.object.updateProjectionMatrix();\n// \t\t_eye.subVectors( scope.object.position, scope.target );\n// \t\tscope.object.lookAt( scope.target );\n// \t\tscope.dispatchEvent( changeEvent );\n// \t\tlastPosition.copy( scope.object.position );\n// \t\tlastZoom = scope.object.zoom;\n// \t};\n// \t// listeners\n// \tfunction onPointerDown( event ) {\n// \t\tif ( scope.enabled === false ) return;\n// \t\tswitch ( event.pointerType ) {\n// \t\t\tcase 'mouse':\n// \t\t\tcase 'pen':\n// \t\t\t\tonMouseDown( event );\n// \t\t\t\tbreak;\n// \t\t\t// TODO touch\n// \t\t}\n// \t}\n// \tfunction onPointerMove( event ) {\n// \t\tif ( scope.enabled === false ) return;\n// \t\tswitch ( event.pointerType ) {\n// \t\t\tcase 'mouse':\n// \t\t\tcase 'pen':\n// \t\t\t\tonMouseMove( event );\n// \t\t\t\tbreak;\n// \t\t\t// TODO touch\n// \t\t}\n// \t}\n// \tfunction onPointerUp( event ) {\n// \t\tif ( scope.enabled === false ) return;\n// \t\tswitch ( event.pointerType ) {\n// \t\t\tcase 'mouse':\n// \t\t\tcase 'pen':\n// \t\t\t\tonMouseUp( event );\n// \t\t\t\tbreak;\n// \t\t\t// TODO touch\n// \t\t}\n// \t}\n// \tfunction keydown( event ) {\n// \t\tif ( scope.enabled === false ) return;\n// \t\twindow.removeEventListener( 'keydown', keydown );\n// \t\tif ( _keyState !== STATE.NONE ) {\n// \t\t\treturn;\n// \t\t} else if ( event.keyCode === scope.keys[ STATE.ROTATE ] && ! scope.noRotate ) {\n// \t\t\t_keyState = STATE.ROTATE;\n// \t\t} else if ( event.keyCode === scope.keys[ STATE.ZOOM ] && ! scope.noZoom ) {\n// \t\t\t_keyState = STATE.ZOOM;\n// \t\t} else if ( event.keyCode === scope.keys[ STATE.PAN ] && ! scope.noPan ) {\n// \t\t\t_keyState = STATE.PAN;\n// \t\t}\n// \t}\n// \tfunction keyup() {\n// \t\tif ( scope.enabled === false ) return;\n// \t\t_keyState = STATE.NONE;\n// \t\twindow.addEventListener( 'keydown', keydown, false );\n// \t}\n// \tfunction onMouseDown( event ) {\n// \t\tevent.preventDefault();\n// \t\tevent.stopPropagation();\n// \t\tif ( _state === STATE.NONE ) {\n// \t\t\tswitch ( event.button ) {\n// \t\t\t\tcase scope.mouseButtons.LEFT:\n// \t\t\t\t\t_state = STATE.ROTATE;\n// \t\t\t\t\tbreak;\n// \t\t\t\tcase scope.mouseButtons.MIDDLE:\n// \t\t\t\t\t_state = STATE.ZOOM;\n// \t\t\t\t\tbreak;\n// \t\t\t\tcase scope.mouseButtons.RIGHT:\n// \t\t\t\t\t_state = STATE.PAN;\n// \t\t\t\t\tbreak;\n// \t\t\t\tdefault:\n// \t\t\t\t\t_state = STATE.NONE;\n// \t\t\t}\n// \t\t}\n// \t\tvar state = ( _keyState !== STATE.NONE ) ? _keyState : _state;\n// \t\tif ( state === STATE.ROTATE && ! scope.noRotate ) {\n// \t\t\t_moveCurr.copy( getMouseOnCircle( event.pageX, event.pageY ) );\n// \t\t\t_movePrev.copy( _moveCurr );\n// \t\t} else if ( state === STATE.ZOOM && ! scope.noZoom ) {\n// \t\t\t_zoomStart.copy( getMouseOnScreen( event.pageX, event.pageY ) );\n// \t\t\t_zoomEnd.copy( _zoomStart );\n// \t\t} else if ( state === STATE.PAN && ! scope.noPan ) {\n// \t\t\t_panStart.copy( getMouseOnScreen( event.pageX, event.pageY ) );\n// \t\t\t_panEnd.copy( _panStart );\n// \t\t}\n// \t\tscope.domElement.ownerDocument.addEventListener( 'pointermove', onPointerMove, false );\n// \t\tscope.domElement.ownerDocument.addEventListener( 'pointerup', onPointerUp, false );\n// \t\tscope.dispatchEvent( startEvent );\n// \t}\n// \tfunction onMouseMove( event ) {\n// \t\tif ( scope.enabled === false ) return;\n// \t\tevent.preventDefault();\n// \t\tevent.stopPropagation();\n// \t\tvar state = ( _keyState !== STATE.NONE ) ? _keyState : _state;\n// \t\tif ( state === STATE.ROTATE && ! scope.noRotate ) {\n// \t\t\t_movePrev.copy( _moveCurr );\n// \t\t\t_moveCurr.copy( getMouseOnCircle( event.pageX, event.pageY ) );\n// \t\t} else if ( state === STATE.ZOOM && ! scope.noZoom ) {\n// \t\t\t_zoomEnd.copy( getMouseOnScreen( event.pageX, event.pageY ) );\n// \t\t} else if ( state === STATE.PAN && ! scope.noPan ) {\n// \t\t\t_panEnd.copy( getMouseOnScreen( event.pageX, event.pageY ) );\n// \t\t}\n// \t}\n// \tfunction onMouseUp( event ) {\n// \t\tif ( scope.enabled === false ) return;\n// \t\tevent.preventDefault();\n// \t\tevent.stopPropagation();\n// \t\t_state = STATE.NONE;\n// \t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove );\n// \t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp );\n// \t\tscope.dispatchEvent( endEvent );\n// \t}\n// \tfunction mousewheel( event ) {\n// \t\tif ( scope.enabled === false ) return;\n// \t\tif ( scope.noZoom === true ) return;\n// \t\tevent.preventDefault();\n// \t\tevent.stopPropagation();\n// \t\tswitch ( event.deltaMode ) {\n// \t\t\tcase 2:\n// \t\t\t\t// Zoom in pages\n// \t\t\t\t_zoomStart.y -= event.deltaY * 0.025;\n// \t\t\t\tbreak;\n// \t\t\tcase 1:\n// \t\t\t\t// Zoom in lines\n// \t\t\t\t_zoomStart.y -= event.deltaY * 0.01;\n// \t\t\t\tbreak;\n// \t\t\tdefault:\n// \t\t\t\t// undefined, 0, assume pixels\n// \t\t\t\t_zoomStart.y -= event.deltaY * 0.00025;\n// \t\t\t\tbreak;\n// \t\t}\n// \t\tscope.dispatchEvent( startEvent );\n// \t\tscope.dispatchEvent( endEvent );\n// \t}\n// \tfunction touchstart( event ) {\n// \t\tif ( scope.enabled === false ) return;\n// \t\tevent.preventDefault();\n// \t\tswitch ( event.touches.length ) {\n// \t\t\tcase 1:\n// \t\t\t\t_state = STATE.TOUCH_ROTATE;\n// \t\t\t\t_moveCurr.copy( getMouseOnCircle( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY ) );\n// \t\t\t\t_movePrev.copy( _moveCurr );\n// \t\t\t\tbreak;\n// \t\t\tdefault: // 2 or more\n// \t\t\t\t_state = STATE.TOUCH_ZOOM_PAN;\n// \t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n// \t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n// \t\t\t\t_touchZoomDistanceEnd = _touchZoomDistanceStart = Math.sqrt( dx * dx + dy * dy );\n// \t\t\t\tvar x = ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX ) / 2;\n// \t\t\t\tvar y = ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY ) / 2;\n// \t\t\t\t_panStart.copy( getMouseOnScreen( x, y ) );\n// \t\t\t\t_panEnd.copy( _panStart );\n// \t\t\t\tbreak;\n// \t\t}\n// \t\tscope.dispatchEvent( startEvent );\n// \t}\n// \tfunction touchmove( event ) {\n// \t\tif ( scope.enabled === false ) return;\n// \t\tevent.preventDefault();\n// \t\tevent.stopPropagation();\n// \t\tswitch ( event.touches.length ) {\n// \t\t\tcase 1:\n// \t\t\t\t_movePrev.copy( _moveCurr );\n// \t\t\t\t_moveCurr.copy( getMouseOnCircle( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY ) );\n// \t\t\t\tbreak;\n// \t\t\tdefault: // 2 or more\n// \t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n// \t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n// \t\t\t\t_touchZoomDistanceEnd = Math.sqrt( dx * dx + dy * dy );\n// \t\t\t\tvar x = ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX ) / 2;\n// \t\t\t\tvar y = ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY ) / 2;\n// \t\t\t\t_panEnd.copy( getMouseOnScreen( x, y ) );\n// \t\t\t\tbreak;\n// \t\t}\n// \t}\n// \tfunction touchend( event ) {\n// \t\tif ( scope.enabled === false ) return;\n// \t\tswitch ( event.touches.length ) {\n// \t\t\tcase 0:\n// \t\t\t\t_state = STATE.NONE;\n// \t\t\t\tbreak;\n// \t\t\tcase 1:\n// \t\t\t\t_state = STATE.TOUCH_ROTATE;\n// \t\t\t\t_moveCurr.copy( getMouseOnCircle( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY ) );\n// \t\t\t\t_movePrev.copy( _moveCurr );\n// \t\t\t\tbreak;\n// \t\t}\n// \t\tscope.dispatchEvent( endEvent );\n// \t}\n// \tfunction contextmenu( event ) {\n// \t\tif ( scope.enabled === false ) return;\n// \t\tevent.preventDefault();\n// \t}\n// \tthis.dispose = function () {\n// \t\tscope.domElement.removeEventListener( 'contextmenu', contextmenu, false );\n// \t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown, false );\n// \t\tscope.domElement.removeEventListener( 'wheel', mousewheel, false );\n// \t\tscope.domElement.removeEventListener( 'touchstart', touchstart, false );\n// \t\tscope.domElement.removeEventListener( 'touchend', touchend, false );\n// \t\tscope.domElement.removeEventListener( 'touchmove', touchmove, false );\n// \t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove, false );\n// \t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp, false );\n// \t\twindow.removeEventListener( 'keydown', keydown, false );\n// \t\twindow.removeEventListener( 'keyup', keyup, false );\n// \t};\n// \tthis.domElement.addEventListener( 'contextmenu', contextmenu, false );\n// \tthis.domElement.addEventListener( 'pointerdown', onPointerDown, false );\n// \tthis.domElement.addEventListener( 'wheel', mousewheel, false );\n// \tthis.domElement.addEventListener( 'touchstart', touchstart, false );\n// \tthis.domElement.addEventListener( 'touchend', touchend, false );\n// \tthis.domElement.addEventListener( 'touchmove', touchmove, false );\n// \tthis.domElement.ownerDocument.addEventListener( 'pointermove', onPointerMove, false );\n// \tthis.domElement.ownerDocument.addEventListener( 'pointerup', onPointerUp, false );\n// \twindow.addEventListener( 'keydown', keydown, false );\n// \twindow.addEventListener( 'keyup', keyup, false );\n// \tthis.handleResize();\n// \t// force an update at start\n// \tthis.update();\n// };\n// TrackballControls.prototype = Object.create( EventDispatcher.prototype );\n// TrackballControls.prototype.constructor = TrackballControls;\n// export { TrackballControls };\n\n/**\n * @author Eberhard Graether / http://egraether.com/\n */\nTHREE.TrackballControls = function (object, domElement) {\n  var _this = this;\n\n  var STATE = {\n    NONE: -1,\n    ROTATE: 0,\n    ZOOM: 1,\n    PAN: 2,\n    TOUCH_ROTATE: 3,\n    TOUCH_ZOOM: 4,\n    TOUCH_PAN: 5\n  };\n  this.object = object;\n  this.domElement = domElement !== undefined ? domElement : document; // API\n\n  this.enabled = true;\n  this.screen = {\n    left: 0,\n    top: 0,\n    width: 0,\n    height: 0\n  };\n  this.rotateSpeed = 1.0;\n  this.zoomSpeed = 1.2;\n  this.panSpeed = 0.3;\n  this.noRotate = false;\n  this.noZoom = false;\n  this.noPan = false;\n  this.noRoll = false;\n  this.staticMoving = false;\n  this.dynamicDampingFactor = 0.2;\n  this.minDistance = 0;\n  this.maxDistance = Infinity;\n  this.keys = [65\n  /*A*/\n  , 83\n  /*S*/\n  , 68\n  /*D*/\n  ]; // internals\n\n  this.target = new THREE.Vector3();\n  var lastPosition = new THREE.Vector3();\n\n  var _state = STATE.NONE,\n      _prevState = STATE.NONE,\n      _eye = new THREE.Vector3(),\n      _rotateStart = new THREE.Vector3(),\n      _rotateEnd = new THREE.Vector3(),\n      _zoomStart = new THREE.Vector2(),\n      _zoomEnd = new THREE.Vector2(),\n      _touchZoomDistanceStart = 0,\n      _touchZoomDistanceEnd = 0,\n      _panStart = new THREE.Vector2(),\n      _panEnd = new THREE.Vector2(); // for reset\n\n\n  this.target0 = this.target.clone();\n  this.position0 = this.object.position.clone();\n  this.up0 = this.object.up.clone(); // events\n\n  var changeEvent = {\n    type: 'change'\n  };\n  var startEvent = {\n    type: 'start'\n  };\n  var endEvent = {\n    type: 'end'\n  }; // methods\n\n  this.handleResize = function () {\n    if (this.domElement === document) {\n      this.screen.left = 0;\n      this.screen.top = 0;\n      this.screen.width = window.innerWidth;\n      this.screen.height = window.innerHeight;\n    } else {\n      this.screen = this.domElement.getBoundingClientRect();\n    }\n  };\n\n  this.handleEvent = function (event) {\n    if (typeof this[event.type] == 'function') {\n      this[event.type](event);\n    }\n  };\n\n  this.getMouseOnScreen = function (clientX, clientY) {\n    return new THREE.Vector2((clientX - _this.screen.left) / _this.screen.width, (clientY - _this.screen.top) / _this.screen.height);\n  };\n\n  this.getMouseProjectionOnBall = function (clientX, clientY) {\n    var mouseOnBall = new THREE.Vector3((clientX - _this.screen.width * 0.5 - _this.screen.left) / (_this.screen.width * .5), (_this.screen.height * 0.5 + _this.screen.top - clientY) / (_this.screen.height * .5), 0.0);\n    var length = mouseOnBall.length();\n\n    if (_this.noRoll) {\n      if (length < Math.SQRT1_2) {\n        mouseOnBall.z = Math.sqrt(1.0 - length * length);\n      } else {\n        mouseOnBall.z = .5 / length;\n      }\n    } else if (length > 1.0) {\n      mouseOnBall.normalize();\n    } else {\n      mouseOnBall.z = Math.sqrt(1.0 - length * length);\n    }\n\n    _eye.copy(_this.object.position).sub(_this.target);\n\n    var projection = _this.object.up.clone().setLength(mouseOnBall.y);\n\n    projection.add(_this.object.up.clone().cross(_eye).setLength(mouseOnBall.x));\n    projection.add(_eye.setLength(mouseOnBall.z));\n    return projection;\n  };\n\n  this.rotateCamera = function () {\n    var angle = Math.acos(_rotateStart.dot(_rotateEnd) / _rotateStart.length() / _rotateEnd.length());\n\n    if (angle) {\n      var axis = new THREE.Vector3().crossVectors(_rotateStart, _rotateEnd).normalize(),\n          quaternion = new THREE.Quaternion();\n      angle *= _this.rotateSpeed;\n      quaternion.setFromAxisAngle(axis, -angle);\n\n      _eye.applyQuaternion(quaternion);\n\n      _this.object.up.applyQuaternion(quaternion);\n\n      _rotateEnd.applyQuaternion(quaternion);\n\n      if (_this.staticMoving) {\n        _rotateStart.copy(_rotateEnd);\n      } else {\n        quaternion.setFromAxisAngle(axis, angle * (_this.dynamicDampingFactor - 1.0));\n\n        _rotateStart.applyQuaternion(quaternion);\n      }\n    }\n  };\n\n  this.zoomCamera = function () {\n    if (_state === STATE.TOUCH_ZOOM) {\n      var factor = _touchZoomDistanceStart / _touchZoomDistanceEnd;\n      _touchZoomDistanceStart = _touchZoomDistanceEnd;\n\n      _eye.multiplyScalar(factor);\n    } else {\n      var factor = 1.0 + (_zoomEnd.y - _zoomStart.y) * _this.zoomSpeed;\n\n      if (factor !== 1.0 && factor > 0.0) {\n        _eye.multiplyScalar(factor);\n\n        if (_this.staticMoving) {\n          _zoomStart.copy(_zoomEnd);\n        } else {\n          _zoomStart.y += (_zoomEnd.y - _zoomStart.y) * this.dynamicDampingFactor;\n        }\n      }\n    }\n  };\n\n  this.panCamera = function () {\n    var mouseChange = _panEnd.clone().sub(_panStart);\n\n    if (mouseChange.lengthSq()) {\n      mouseChange.multiplyScalar(_eye.length() * _this.panSpeed);\n\n      var pan = _eye.clone().cross(_this.object.up).setLength(mouseChange.x);\n\n      pan.add(_this.object.up.clone().setLength(mouseChange.y));\n\n      _this.object.position.add(pan);\n\n      _this.target.add(pan);\n\n      if (_this.staticMoving) {\n        _panStart = _panEnd;\n      } else {\n        _panStart.add(mouseChange.subVectors(_panEnd, _panStart).multiplyScalar(_this.dynamicDampingFactor));\n      }\n    }\n  };\n\n  this.checkDistances = function () {\n    if (!_this.noZoom || !_this.noPan) {\n      if (_eye.lengthSq() > _this.maxDistance * _this.maxDistance) {\n        _this.object.position.addVectors(_this.target, _eye.setLength(_this.maxDistance));\n      }\n\n      if (_eye.lengthSq() < _this.minDistance * _this.minDistance) {\n        _this.object.position.addVectors(_this.target, _eye.setLength(_this.minDistance));\n      }\n    }\n  };\n\n  this.update = function () {\n    _eye.subVectors(_this.object.position, _this.target);\n\n    if (!_this.noRotate) {\n      _this.rotateCamera();\n    }\n\n    if (!_this.noZoom) {\n      _this.zoomCamera();\n    }\n\n    if (!_this.noPan) {\n      _this.panCamera();\n    }\n\n    _this.object.position.addVectors(_this.target, _eye);\n\n    _this.checkDistances();\n\n    _this.object.lookAt(_this.target);\n\n    if (lastPosition.distanceToSquared(_this.object.position) > 0) {\n      _this.dispatchEvent(changeEvent);\n\n      lastPosition.copy(_this.object.position);\n    }\n  };\n\n  this.reset = function () {\n    _state = STATE.NONE;\n    _prevState = STATE.NONE;\n\n    _this.target.copy(_this.target0);\n\n    _this.object.position.copy(_this.position0);\n\n    _this.object.up.copy(_this.up0);\n\n    _eye.subVectors(_this.object.position, _this.target);\n\n    _this.object.lookAt(_this.target);\n\n    _this.dispatchEvent(changeEvent);\n\n    lastPosition.copy(_this.object.position);\n  }; // listeners\n\n\n  function keydown(event) {\n    if (_this.enabled === false) return;\n    window.removeEventListener('keydown', keydown);\n    _prevState = _state;\n\n    if (_state !== STATE.NONE) {\n      return;\n    } else if (event.keyCode === _this.keys[STATE.ROTATE] && !_this.noRotate) {\n      _state = STATE.ROTATE;\n    } else if (event.keyCode === _this.keys[STATE.ZOOM] && !_this.noZoom) {\n      _state = STATE.ZOOM;\n    } else if (event.keyCode === _this.keys[STATE.PAN] && !_this.noPan) {\n      _state = STATE.PAN;\n    }\n  }\n\n  function keyup(event) {\n    if (_this.enabled === false) return;\n    _state = _prevState;\n    window.addEventListener('keydown', keydown, false);\n  }\n\n  function mousedown(event) {\n    if (_this.enabled === false) return;\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (_state === STATE.NONE) {\n      _state = event.button;\n    }\n\n    if (_state === STATE.ROTATE && !_this.noRotate) {\n      _rotateStart = _this.getMouseProjectionOnBall(event.clientX, event.clientY);\n\n      _rotateEnd.copy(_rotateStart);\n    } else if (_state === STATE.ZOOM && !_this.noZoom) {\n      _zoomStart = _this.getMouseOnScreen(event.clientX, event.clientY);\n\n      _zoomEnd.copy(_zoomStart);\n    } else if (_state === STATE.PAN && !_this.noPan) {\n      _panStart = _this.getMouseOnScreen(event.clientX, event.clientY);\n\n      _panEnd.copy(_panStart);\n    }\n\n    document.addEventListener('mousemove', mousemove, false);\n    document.addEventListener('mouseup', mouseup, false);\n\n    _this.dispatchEvent(startEvent);\n  }\n\n  function mousemove(event) {\n    if (_this.enabled === false) return;\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (_state === STATE.ROTATE && !_this.noRotate) {\n      _rotateEnd = _this.getMouseProjectionOnBall(event.clientX, event.clientY);\n    } else if (_state === STATE.ZOOM && !_this.noZoom) {\n      _zoomEnd = _this.getMouseOnScreen(event.clientX, event.clientY);\n    } else if (_state === STATE.PAN && !_this.noPan) {\n      _panEnd = _this.getMouseOnScreen(event.clientX, event.clientY);\n    }\n  }\n\n  function mouseup(event) {\n    if (_this.enabled === false) return;\n    event.preventDefault();\n    event.stopPropagation();\n    _state = STATE.NONE;\n    document.removeEventListener('mousemove', mousemove);\n    document.removeEventListener('mouseup', mouseup);\n\n    _this.dispatchEvent(endEvent);\n  }\n\n  function mousewheel(event) {\n    if (_this.enabled === false) return;\n    event.preventDefault();\n    event.stopPropagation();\n    var delta = 0;\n\n    if (event.wheelDelta) {\n      // WebKit / Opera / Explorer 9\n      delta = event.wheelDelta / 40;\n    } else if (event.detail) {\n      // Firefox\n      delta = -event.detail / 3;\n    }\n\n    _zoomStart.y += delta * 0.01;\n\n    _this.dispatchEvent(startEvent);\n\n    _this.dispatchEvent(endEvent);\n  }\n\n  function touchstart(event) {\n    if (_this.enabled === false) return;\n\n    switch (event.touches.length) {\n      case 1:\n        _state = STATE.TOUCH_ROTATE;\n        _rotateStart = _rotateEnd = _this.getMouseProjectionOnBall(event.touches[0].pageX, event.touches[0].pageY);\n        break;\n\n      case 2:\n        _state = STATE.TOUCH_ZOOM;\n        var dx = event.touches[0].pageX - event.touches[1].pageX;\n        var dy = event.touches[0].pageY - event.touches[1].pageY;\n        _touchZoomDistanceEnd = _touchZoomDistanceStart = Math.sqrt(dx * dx + dy * dy);\n        break;\n\n      case 3:\n        _state = STATE.TOUCH_PAN;\n        _panStart = _panEnd = _this.getMouseOnScreen(event.touches[0].pageX, event.touches[0].pageY);\n        break;\n\n      default:\n        _state = STATE.NONE;\n    }\n\n    _this.dispatchEvent(startEvent);\n  }\n\n  function touchmove(event) {\n    if (_this.enabled === false) return;\n    event.preventDefault();\n    event.stopPropagation();\n\n    switch (event.touches.length) {\n      case 1:\n        _rotateEnd = _this.getMouseProjectionOnBall(event.touches[0].pageX, event.touches[0].pageY);\n        break;\n\n      case 2:\n        var dx = event.touches[0].pageX - event.touches[1].pageX;\n        var dy = event.touches[0].pageY - event.touches[1].pageY;\n        _touchZoomDistanceEnd = Math.sqrt(dx * dx + dy * dy);\n        break;\n\n      case 3:\n        _panEnd = _this.getMouseOnScreen(event.touches[0].pageX, event.touches[0].pageY);\n        break;\n\n      default:\n        _state = STATE.NONE;\n    }\n  }\n\n  function touchend(event) {\n    if (_this.enabled === false) return;\n\n    switch (event.touches.length) {\n      case 1:\n        _rotateStart = _rotateEnd = _this.getMouseProjectionOnBall(event.touches[0].pageX, event.touches[0].pageY);\n        break;\n\n      case 2:\n        _touchZoomDistanceStart = _touchZoomDistanceEnd = 0;\n        break;\n\n      case 3:\n        _panStart = _panEnd = _this.getMouseOnScreen(event.touches[0].pageX, event.touches[0].pageY);\n        break;\n    }\n\n    _state = STATE.NONE;\n\n    _this.dispatchEvent(endEvent);\n  }\n\n  this.domElement.addEventListener('contextmenu', function (event) {\n    event.preventDefault();\n  }, false);\n  this.domElement.addEventListener('mousedown', mousedown, false);\n  this.domElement.addEventListener('mousewheel', mousewheel, false);\n  this.domElement.addEventListener('DOMMouseScroll', mousewheel, false); // firefox\n\n  this.domElement.addEventListener('touchstart', touchstart, false);\n  this.domElement.addEventListener('touchend', touchend, false);\n  this.domElement.addEventListener('touchmove', touchmove, false);\n  window.addEventListener('keydown', keydown, false);\n  window.addEventListener('keyup', keyup, false);\n  this.handleResize();\n};\n\nTHREE.TrackballControls.prototype = Object.create(THREE.EventDispatcher.prototype);","map":{"version":3,"sources":["/Users/muyangguo/Desktop/webgl/WebglPrototype/cybergraph/src/TrackballControls.js"],"names":["THREE","TrackballControls","object","domElement","_this","STATE","NONE","ROTATE","ZOOM","PAN","TOUCH_ROTATE","TOUCH_ZOOM","TOUCH_PAN","undefined","document","enabled","screen","left","top","width","height","rotateSpeed","zoomSpeed","panSpeed","noRotate","noZoom","noPan","noRoll","staticMoving","dynamicDampingFactor","minDistance","maxDistance","Infinity","keys","target","Vector3","lastPosition","_state","_prevState","_eye","_rotateStart","_rotateEnd","_zoomStart","Vector2","_zoomEnd","_touchZoomDistanceStart","_touchZoomDistanceEnd","_panStart","_panEnd","target0","clone","position0","position","up0","up","changeEvent","type","startEvent","endEvent","handleResize","window","innerWidth","innerHeight","getBoundingClientRect","handleEvent","event","getMouseOnScreen","clientX","clientY","getMouseProjectionOnBall","mouseOnBall","length","Math","SQRT1_2","z","sqrt","normalize","copy","sub","projection","setLength","y","add","cross","x","rotateCamera","angle","acos","dot","axis","crossVectors","quaternion","Quaternion","setFromAxisAngle","applyQuaternion","zoomCamera","factor","multiplyScalar","panCamera","mouseChange","lengthSq","pan","subVectors","checkDistances","addVectors","update","lookAt","distanceToSquared","dispatchEvent","reset","keydown","removeEventListener","keyCode","keyup","addEventListener","mousedown","preventDefault","stopPropagation","button","mousemove","mouseup","mousewheel","delta","wheelDelta","detail","touchstart","touches","pageX","pageY","dx","dy","touchmove","touchend","prototype","Object","create","EventDispatcher"],"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","sourcesContent":["// import {\n// \tEventDispatcher,\n// \tMOUSE,\n// \tQuaternion,\n// \tVector2,\n// \tVector3\n// } from \"three\";\n\n// var TrackballControls = function ( object, domElement ) {\n\n// \tif ( domElement === undefined ) console.warn( 'THREE.TrackballControls: The second parameter \"domElement\" is now mandatory.' );\n// \tif ( domElement === document ) console.error( 'THREE.TrackballControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n\n// \tvar scope = this;\n// \tvar STATE = { NONE: - 1, ROTATE: 0, ZOOM: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_ZOOM_PAN: 4 };\n\n// \tthis.object = object;\n// \tthis.domElement = domElement;\n\n// \t// API\n\n// \tthis.enabled = true;\n\n// \tthis.screen = { left: 0, top: 0, width: 0, height: 0 };\n\n// \tthis.rotateSpeed = 1.0;\n// \tthis.zoomSpeed = 1.2;\n// \tthis.panSpeed = 0.3;\n\n// \tthis.noRotate = false;\n// \tthis.noZoom = false;\n// \tthis.noPan = false;\n\n// \tthis.staticMoving = false;\n// \tthis.dynamicDampingFactor = 0.2;\n\n// \tthis.minDistance = 0;\n// \tthis.maxDistance = Infinity;\n\n// \tthis.keys = [ 65 /*A*/, 83 /*S*/, 68 /*D*/ ];\n\n// \tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.ZOOM, RIGHT: MOUSE.PAN };\n\n// \t// internals\n\n// \tthis.target = new Vector3();\n\n// \tvar EPS = 0.000001;\n\n// \tvar lastPosition = new Vector3();\n// \tvar lastZoom = 1;\n\n// \tvar _state = STATE.NONE,\n// \t\t_keyState = STATE.NONE,\n\n// \t\t_eye = new Vector3(),\n\n// \t\t_movePrev = new Vector2(),\n// \t\t_moveCurr = new Vector2(),\n\n// \t\t_lastAxis = new Vector3(),\n// \t\t_lastAngle = 0,\n\n// \t\t_zoomStart = new Vector2(),\n// \t\t_zoomEnd = new Vector2(),\n\n// \t\t_touchZoomDistanceStart = 0,\n// \t\t_touchZoomDistanceEnd = 0,\n\n// \t\t_panStart = new Vector2(),\n// \t\t_panEnd = new Vector2();\n\n// \t// for reset\n\n// \tthis.target0 = this.target.clone();\n// \tthis.position0 = this.object.position.clone();\n// \tthis.up0 = this.object.up.clone();\n// \tthis.zoom0 = this.object.zoom;\n\n// \t// events\n\n// \tvar changeEvent = { type: 'change' };\n// \tvar startEvent = { type: 'start' };\n// \tvar endEvent = { type: 'end' };\n\n\n// \t// methods\n\n// \tthis.handleResize = function () {\n\n// \t\tvar box = scope.domElement.getBoundingClientRect();\n// \t\t// adjustments come from similar code in the jquery offset() function\n// \t\tvar d = scope.domElement.ownerDocument.documentElement;\n// \t\tscope.screen.left = box.left + window.pageXOffset - d.clientLeft;\n// \t\tscope.screen.top = box.top + window.pageYOffset - d.clientTop;\n// \t\tscope.screen.width = box.width;\n// \t\tscope.screen.height = box.height;\n\n// \t};\n\n// \tvar getMouseOnScreen = ( function () {\n\n// \t\tvar vector = new Vector2();\n\n// \t\treturn function getMouseOnScreen( pageX, pageY ) {\n\n// \t\t\tvector.set(\n// \t\t\t\t( pageX - scope.screen.left ) / scope.screen.width,\n// \t\t\t\t( pageY - scope.screen.top ) / scope.screen.height\n// \t\t\t);\n\n// \t\t\treturn vector;\n\n// \t\t};\n\n// \t}() );\n\n// \tvar getMouseOnCircle = ( function () {\n\n// \t\tvar vector = new Vector2();\n\n// \t\treturn function getMouseOnCircle( pageX, pageY ) {\n\n// \t\t\tvector.set(\n// \t\t\t\t( ( pageX - scope.screen.width * 0.5 - scope.screen.left ) / ( scope.screen.width * 0.5 ) ),\n// \t\t\t\t( ( scope.screen.height + 2 * ( scope.screen.top - pageY ) ) / scope.screen.width ) // screen.width intentional\n// \t\t\t);\n\n// \t\t\treturn vector;\n\n// \t\t};\n\n// \t}() );\n\n// \tthis.rotateCamera = ( function () {\n\n// \t\tvar axis = new Vector3(),\n// \t\t\tquaternion = new Quaternion(),\n// \t\t\teyeDirection = new Vector3(),\n// \t\t\tobjectUpDirection = new Vector3(),\n// \t\t\tobjectSidewaysDirection = new Vector3(),\n// \t\t\tmoveDirection = new Vector3(),\n// \t\t\tangle;\n\n// \t\treturn function rotateCamera() {\n\n// \t\t\tmoveDirection.set( _moveCurr.x - _movePrev.x, _moveCurr.y - _movePrev.y, 0 );\n// \t\t\tangle = moveDirection.length();\n\n// \t\t\tif ( angle ) {\n\n// \t\t\t\t_eye.copy( scope.object.position ).sub( scope.target );\n\n// \t\t\t\teyeDirection.copy( _eye ).normalize();\n// \t\t\t\tobjectUpDirection.copy( scope.object.up ).normalize();\n// \t\t\t\tobjectSidewaysDirection.crossVectors( objectUpDirection, eyeDirection ).normalize();\n\n// \t\t\t\tobjectUpDirection.setLength( _moveCurr.y - _movePrev.y );\n// \t\t\t\tobjectSidewaysDirection.setLength( _moveCurr.x - _movePrev.x );\n\n// \t\t\t\tmoveDirection.copy( objectUpDirection.add( objectSidewaysDirection ) );\n\n// \t\t\t\taxis.crossVectors( moveDirection, _eye ).normalize();\n\n// \t\t\t\tangle *= scope.rotateSpeed;\n// \t\t\t\tquaternion.setFromAxisAngle( axis, angle );\n\n// \t\t\t\t_eye.applyQuaternion( quaternion );\n// \t\t\t\tscope.object.up.applyQuaternion( quaternion );\n\n// \t\t\t\t_lastAxis.copy( axis );\n// \t\t\t\t_lastAngle = angle;\n\n// \t\t\t} else if ( ! scope.staticMoving && _lastAngle ) {\n\n// \t\t\t\t_lastAngle *= Math.sqrt( 1.0 - scope.dynamicDampingFactor );\n// \t\t\t\t_eye.copy( scope.object.position ).sub( scope.target );\n// \t\t\t\tquaternion.setFromAxisAngle( _lastAxis, _lastAngle );\n// \t\t\t\t_eye.applyQuaternion( quaternion );\n// \t\t\t\tscope.object.up.applyQuaternion( quaternion );\n\n// \t\t\t}\n\n// \t\t\t_movePrev.copy( _moveCurr );\n\n// \t\t};\n\n// \t}() );\n\n\n// \tthis.zoomCamera = function () {\n\n// \t\tvar factor;\n\n// \t\tif ( _state === STATE.TOUCH_ZOOM_PAN ) {\n\n// \t\t\tfactor = _touchZoomDistanceStart / _touchZoomDistanceEnd;\n// \t\t\t_touchZoomDistanceStart = _touchZoomDistanceEnd;\n\n// \t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n// \t\t\t\t_eye.multiplyScalar( factor );\n\n// \t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n// \t\t\t\tscope.object.zoom *= factor;\n// \t\t\t\tscope.object.updateProjectionMatrix();\n\n// \t\t\t} else {\n\n// \t\t\t\tconsole.warn( 'THREE.TrackballControls: Unsupported camera type' );\n\n// \t\t\t}\n\n// \t\t} else {\n\n// \t\t\tfactor = 1.0 + ( _zoomEnd.y - _zoomStart.y ) * scope.zoomSpeed;\n\n// \t\t\tif ( factor !== 1.0 && factor > 0.0 ) {\n\n// \t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n// \t\t\t\t\t_eye.multiplyScalar( factor );\n\n// \t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n// \t\t\t\t\tscope.object.zoom /= factor;\n// \t\t\t\t\tscope.object.updateProjectionMatrix();\n\n// \t\t\t\t} else {\n\n// \t\t\t\t\tconsole.warn( 'THREE.TrackballControls: Unsupported camera type' );\n\n// \t\t\t\t}\n\n// \t\t\t}\n\n// \t\t\tif ( scope.staticMoving ) {\n\n// \t\t\t\t_zoomStart.copy( _zoomEnd );\n\n// \t\t\t} else {\n\n// \t\t\t\t_zoomStart.y += ( _zoomEnd.y - _zoomStart.y ) * this.dynamicDampingFactor;\n\n// \t\t\t}\n\n// \t\t}\n\n// \t};\n\n// \tthis.panCamera = ( function () {\n\n// \t\tvar mouseChange = new Vector2(),\n// \t\t\tobjectUp = new Vector3(),\n// \t\t\tpan = new Vector3();\n\n// \t\treturn function panCamera() {\n\n// \t\t\tmouseChange.copy( _panEnd ).sub( _panStart );\n\n// \t\t\tif ( mouseChange.lengthSq() ) {\n\n// \t\t\t\tif ( scope.object.isOrthographicCamera ) {\n\n// \t\t\t\t\tvar scale_x = ( scope.object.right - scope.object.left ) / scope.object.zoom / scope.domElement.clientWidth;\n// \t\t\t\t\tvar scale_y = ( scope.object.top - scope.object.bottom ) / scope.object.zoom / scope.domElement.clientWidth;\n\n// \t\t\t\t\tmouseChange.x *= scale_x;\n// \t\t\t\t\tmouseChange.y *= scale_y;\n\n// \t\t\t\t}\n\n// \t\t\t\tmouseChange.multiplyScalar( _eye.length() * scope.panSpeed );\n\n// \t\t\t\tpan.copy( _eye ).cross( scope.object.up ).setLength( mouseChange.x );\n// \t\t\t\tpan.add( objectUp.copy( scope.object.up ).setLength( mouseChange.y ) );\n\n// \t\t\t\tscope.object.position.add( pan );\n// \t\t\t\tscope.target.add( pan );\n\n// \t\t\t\tif ( scope.staticMoving ) {\n\n// \t\t\t\t\t_panStart.copy( _panEnd );\n\n// \t\t\t\t} else {\n\n// \t\t\t\t\t_panStart.add( mouseChange.subVectors( _panEnd, _panStart ).multiplyScalar( scope.dynamicDampingFactor ) );\n\n// \t\t\t\t}\n\n// \t\t\t}\n\n// \t\t};\n\n// \t}() );\n\n// \tthis.checkDistances = function () {\n\n// \t\tif ( ! scope.noZoom || ! scope.noPan ) {\n\n// \t\t\tif ( _eye.lengthSq() > scope.maxDistance * scope.maxDistance ) {\n\n// \t\t\t\tscope.object.position.addVectors( scope.target, _eye.setLength( scope.maxDistance ) );\n// \t\t\t\t_zoomStart.copy( _zoomEnd );\n\n// \t\t\t}\n\n// \t\t\tif ( _eye.lengthSq() < scope.minDistance * scope.minDistance ) {\n\n// \t\t\t\tscope.object.position.addVectors( scope.target, _eye.setLength( scope.minDistance ) );\n// \t\t\t\t_zoomStart.copy( _zoomEnd );\n\n// \t\t\t}\n\n// \t\t}\n\n// \t};\n\n// \tthis.update = function () {\n\n// \t\t_eye.subVectors( scope.object.position, scope.target );\n\n// \t\tif ( ! scope.noRotate ) {\n\n// \t\t\tscope.rotateCamera();\n\n// \t\t}\n\n// \t\tif ( ! scope.noZoom ) {\n\n// \t\t\tscope.zoomCamera();\n\n// \t\t}\n\n// \t\tif ( ! scope.noPan ) {\n\n// \t\t\tscope.panCamera();\n\n// \t\t}\n\n// \t\tscope.object.position.addVectors( scope.target, _eye );\n\n// \t\tif ( scope.object.isPerspectiveCamera ) {\n\n// \t\t\tscope.checkDistances();\n\n// \t\t\tscope.object.lookAt( scope.target );\n\n// \t\t\tif ( lastPosition.distanceToSquared( scope.object.position ) > EPS ) {\n\n// \t\t\t\tscope.dispatchEvent( changeEvent );\n\n// \t\t\t\tlastPosition.copy( scope.object.position );\n\n// \t\t\t}\n\n// \t\t} else if ( scope.object.isOrthographicCamera ) {\n\n// \t\t\tscope.object.lookAt( scope.target );\n\n// \t\t\tif ( lastPosition.distanceToSquared( scope.object.position ) > EPS || lastZoom !== scope.object.zoom ) {\n\n// \t\t\t\tscope.dispatchEvent( changeEvent );\n\n// \t\t\t\tlastPosition.copy( scope.object.position );\n// \t\t\t\tlastZoom = scope.object.zoom;\n\n// \t\t\t}\n\n// \t\t} else {\n\n// \t\t\tconsole.warn( 'THREE.TrackballControls: Unsupported camera type' );\n\n// \t\t}\n\n// \t};\n\n// \tthis.reset = function () {\n\n// \t\t_state = STATE.NONE;\n// \t\t_keyState = STATE.NONE;\n\n// \t\tscope.target.copy( scope.target0 );\n// \t\tscope.object.position.copy( scope.position0 );\n// \t\tscope.object.up.copy( scope.up0 );\n// \t\tscope.object.zoom = scope.zoom0;\n\n// \t\tscope.object.updateProjectionMatrix();\n\n// \t\t_eye.subVectors( scope.object.position, scope.target );\n\n// \t\tscope.object.lookAt( scope.target );\n\n// \t\tscope.dispatchEvent( changeEvent );\n\n// \t\tlastPosition.copy( scope.object.position );\n// \t\tlastZoom = scope.object.zoom;\n\n// \t};\n\n// \t// listeners\n\n// \tfunction onPointerDown( event ) {\n\n// \t\tif ( scope.enabled === false ) return;\n\n// \t\tswitch ( event.pointerType ) {\n\n// \t\t\tcase 'mouse':\n// \t\t\tcase 'pen':\n// \t\t\t\tonMouseDown( event );\n// \t\t\t\tbreak;\n\n// \t\t\t// TODO touch\n\n// \t\t}\n\n// \t}\n\n// \tfunction onPointerMove( event ) {\n\n// \t\tif ( scope.enabled === false ) return;\n\n// \t\tswitch ( event.pointerType ) {\n\n// \t\t\tcase 'mouse':\n// \t\t\tcase 'pen':\n// \t\t\t\tonMouseMove( event );\n// \t\t\t\tbreak;\n\n// \t\t\t// TODO touch\n\n// \t\t}\n\n// \t}\n\n// \tfunction onPointerUp( event ) {\n\n// \t\tif ( scope.enabled === false ) return;\n\n// \t\tswitch ( event.pointerType ) {\n\n// \t\t\tcase 'mouse':\n// \t\t\tcase 'pen':\n// \t\t\t\tonMouseUp( event );\n// \t\t\t\tbreak;\n\n// \t\t\t// TODO touch\n\n// \t\t}\n\n// \t}\n\n// \tfunction keydown( event ) {\n\n// \t\tif ( scope.enabled === false ) return;\n\n// \t\twindow.removeEventListener( 'keydown', keydown );\n\n// \t\tif ( _keyState !== STATE.NONE ) {\n\n// \t\t\treturn;\n\n// \t\t} else if ( event.keyCode === scope.keys[ STATE.ROTATE ] && ! scope.noRotate ) {\n\n// \t\t\t_keyState = STATE.ROTATE;\n\n// \t\t} else if ( event.keyCode === scope.keys[ STATE.ZOOM ] && ! scope.noZoom ) {\n\n// \t\t\t_keyState = STATE.ZOOM;\n\n// \t\t} else if ( event.keyCode === scope.keys[ STATE.PAN ] && ! scope.noPan ) {\n\n// \t\t\t_keyState = STATE.PAN;\n\n// \t\t}\n\n// \t}\n\n// \tfunction keyup() {\n\n// \t\tif ( scope.enabled === false ) return;\n\n// \t\t_keyState = STATE.NONE;\n\n// \t\twindow.addEventListener( 'keydown', keydown, false );\n\n// \t}\n\n// \tfunction onMouseDown( event ) {\n\n// \t\tevent.preventDefault();\n// \t\tevent.stopPropagation();\n\n// \t\tif ( _state === STATE.NONE ) {\n\n// \t\t\tswitch ( event.button ) {\n\n// \t\t\t\tcase scope.mouseButtons.LEFT:\n// \t\t\t\t\t_state = STATE.ROTATE;\n// \t\t\t\t\tbreak;\n\n// \t\t\t\tcase scope.mouseButtons.MIDDLE:\n// \t\t\t\t\t_state = STATE.ZOOM;\n// \t\t\t\t\tbreak;\n\n// \t\t\t\tcase scope.mouseButtons.RIGHT:\n// \t\t\t\t\t_state = STATE.PAN;\n// \t\t\t\t\tbreak;\n\n// \t\t\t\tdefault:\n// \t\t\t\t\t_state = STATE.NONE;\n\n// \t\t\t}\n\n// \t\t}\n\n// \t\tvar state = ( _keyState !== STATE.NONE ) ? _keyState : _state;\n\n// \t\tif ( state === STATE.ROTATE && ! scope.noRotate ) {\n\n// \t\t\t_moveCurr.copy( getMouseOnCircle( event.pageX, event.pageY ) );\n// \t\t\t_movePrev.copy( _moveCurr );\n\n// \t\t} else if ( state === STATE.ZOOM && ! scope.noZoom ) {\n\n// \t\t\t_zoomStart.copy( getMouseOnScreen( event.pageX, event.pageY ) );\n// \t\t\t_zoomEnd.copy( _zoomStart );\n\n// \t\t} else if ( state === STATE.PAN && ! scope.noPan ) {\n\n// \t\t\t_panStart.copy( getMouseOnScreen( event.pageX, event.pageY ) );\n// \t\t\t_panEnd.copy( _panStart );\n\n// \t\t}\n\n// \t\tscope.domElement.ownerDocument.addEventListener( 'pointermove', onPointerMove, false );\n// \t\tscope.domElement.ownerDocument.addEventListener( 'pointerup', onPointerUp, false );\n\n// \t\tscope.dispatchEvent( startEvent );\n\n// \t}\n\n// \tfunction onMouseMove( event ) {\n\n// \t\tif ( scope.enabled === false ) return;\n\n// \t\tevent.preventDefault();\n// \t\tevent.stopPropagation();\n\n// \t\tvar state = ( _keyState !== STATE.NONE ) ? _keyState : _state;\n\n// \t\tif ( state === STATE.ROTATE && ! scope.noRotate ) {\n\n// \t\t\t_movePrev.copy( _moveCurr );\n// \t\t\t_moveCurr.copy( getMouseOnCircle( event.pageX, event.pageY ) );\n\n// \t\t} else if ( state === STATE.ZOOM && ! scope.noZoom ) {\n\n// \t\t\t_zoomEnd.copy( getMouseOnScreen( event.pageX, event.pageY ) );\n\n// \t\t} else if ( state === STATE.PAN && ! scope.noPan ) {\n\n// \t\t\t_panEnd.copy( getMouseOnScreen( event.pageX, event.pageY ) );\n\n// \t\t}\n\n// \t}\n\n// \tfunction onMouseUp( event ) {\n\n// \t\tif ( scope.enabled === false ) return;\n\n// \t\tevent.preventDefault();\n// \t\tevent.stopPropagation();\n\n// \t\t_state = STATE.NONE;\n\n// \t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove );\n// \t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp );\n\n// \t\tscope.dispatchEvent( endEvent );\n\n// \t}\n\n// \tfunction mousewheel( event ) {\n\n// \t\tif ( scope.enabled === false ) return;\n\n// \t\tif ( scope.noZoom === true ) return;\n\n// \t\tevent.preventDefault();\n// \t\tevent.stopPropagation();\n\n// \t\tswitch ( event.deltaMode ) {\n\n// \t\t\tcase 2:\n// \t\t\t\t// Zoom in pages\n// \t\t\t\t_zoomStart.y -= event.deltaY * 0.025;\n// \t\t\t\tbreak;\n\n// \t\t\tcase 1:\n// \t\t\t\t// Zoom in lines\n// \t\t\t\t_zoomStart.y -= event.deltaY * 0.01;\n// \t\t\t\tbreak;\n\n// \t\t\tdefault:\n// \t\t\t\t// undefined, 0, assume pixels\n// \t\t\t\t_zoomStart.y -= event.deltaY * 0.00025;\n// \t\t\t\tbreak;\n\n// \t\t}\n\n// \t\tscope.dispatchEvent( startEvent );\n// \t\tscope.dispatchEvent( endEvent );\n\n// \t}\n\n// \tfunction touchstart( event ) {\n\n// \t\tif ( scope.enabled === false ) return;\n\n// \t\tevent.preventDefault();\n\n// \t\tswitch ( event.touches.length ) {\n\n// \t\t\tcase 1:\n// \t\t\t\t_state = STATE.TOUCH_ROTATE;\n// \t\t\t\t_moveCurr.copy( getMouseOnCircle( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY ) );\n// \t\t\t\t_movePrev.copy( _moveCurr );\n// \t\t\t\tbreak;\n\n// \t\t\tdefault: // 2 or more\n// \t\t\t\t_state = STATE.TOUCH_ZOOM_PAN;\n// \t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n// \t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n// \t\t\t\t_touchZoomDistanceEnd = _touchZoomDistanceStart = Math.sqrt( dx * dx + dy * dy );\n\n// \t\t\t\tvar x = ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX ) / 2;\n// \t\t\t\tvar y = ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY ) / 2;\n// \t\t\t\t_panStart.copy( getMouseOnScreen( x, y ) );\n// \t\t\t\t_panEnd.copy( _panStart );\n// \t\t\t\tbreak;\n\n// \t\t}\n\n// \t\tscope.dispatchEvent( startEvent );\n\n// \t}\n\n// \tfunction touchmove( event ) {\n\n// \t\tif ( scope.enabled === false ) return;\n\n// \t\tevent.preventDefault();\n// \t\tevent.stopPropagation();\n\n// \t\tswitch ( event.touches.length ) {\n\n// \t\t\tcase 1:\n// \t\t\t\t_movePrev.copy( _moveCurr );\n// \t\t\t\t_moveCurr.copy( getMouseOnCircle( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY ) );\n// \t\t\t\tbreak;\n\n// \t\t\tdefault: // 2 or more\n// \t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n// \t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n// \t\t\t\t_touchZoomDistanceEnd = Math.sqrt( dx * dx + dy * dy );\n\n// \t\t\t\tvar x = ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX ) / 2;\n// \t\t\t\tvar y = ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY ) / 2;\n// \t\t\t\t_panEnd.copy( getMouseOnScreen( x, y ) );\n// \t\t\t\tbreak;\n\n// \t\t}\n\n// \t}\n\n// \tfunction touchend( event ) {\n\n// \t\tif ( scope.enabled === false ) return;\n\n// \t\tswitch ( event.touches.length ) {\n\n// \t\t\tcase 0:\n// \t\t\t\t_state = STATE.NONE;\n// \t\t\t\tbreak;\n\n// \t\t\tcase 1:\n// \t\t\t\t_state = STATE.TOUCH_ROTATE;\n// \t\t\t\t_moveCurr.copy( getMouseOnCircle( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY ) );\n// \t\t\t\t_movePrev.copy( _moveCurr );\n// \t\t\t\tbreak;\n\n// \t\t}\n\n// \t\tscope.dispatchEvent( endEvent );\n\n// \t}\n\n// \tfunction contextmenu( event ) {\n\n// \t\tif ( scope.enabled === false ) return;\n\n// \t\tevent.preventDefault();\n\n// \t}\n\n// \tthis.dispose = function () {\n\n// \t\tscope.domElement.removeEventListener( 'contextmenu', contextmenu, false );\n\n// \t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown, false );\n// \t\tscope.domElement.removeEventListener( 'wheel', mousewheel, false );\n\n// \t\tscope.domElement.removeEventListener( 'touchstart', touchstart, false );\n// \t\tscope.domElement.removeEventListener( 'touchend', touchend, false );\n// \t\tscope.domElement.removeEventListener( 'touchmove', touchmove, false );\n\n// \t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove, false );\n// \t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp, false );\n\n// \t\twindow.removeEventListener( 'keydown', keydown, false );\n// \t\twindow.removeEventListener( 'keyup', keyup, false );\n\n// \t};\n\n// \tthis.domElement.addEventListener( 'contextmenu', contextmenu, false );\n\n// \tthis.domElement.addEventListener( 'pointerdown', onPointerDown, false );\n// \tthis.domElement.addEventListener( 'wheel', mousewheel, false );\n\n// \tthis.domElement.addEventListener( 'touchstart', touchstart, false );\n// \tthis.domElement.addEventListener( 'touchend', touchend, false );\n// \tthis.domElement.addEventListener( 'touchmove', touchmove, false );\n\n// \tthis.domElement.ownerDocument.addEventListener( 'pointermove', onPointerMove, false );\n// \tthis.domElement.ownerDocument.addEventListener( 'pointerup', onPointerUp, false );\n\n// \twindow.addEventListener( 'keydown', keydown, false );\n// \twindow.addEventListener( 'keyup', keyup, false );\n\n// \tthis.handleResize();\n\n// \t// force an update at start\n// \tthis.update();\n\n// };\n\n// TrackballControls.prototype = Object.create( EventDispatcher.prototype );\n// TrackballControls.prototype.constructor = TrackballControls;\n\n// export { TrackballControls };\n\n\n\n/**\n * @author Eberhard Graether / http://egraether.com/\n */\n\nTHREE.TrackballControls = function ( object, domElement ) {\n\n\tvar _this = this;\n\tvar STATE = { NONE: -1, ROTATE: 0, ZOOM: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_ZOOM: 4, TOUCH_PAN: 5 };\n\n\tthis.object = object;\n\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t// API\n\n\tthis.enabled = true;\n\n\tthis.screen = { left: 0, top: 0, width: 0, height: 0 };\n\n\tthis.rotateSpeed = 1.0;\n\tthis.zoomSpeed = 1.2;\n\tthis.panSpeed = 0.3;\n\n\tthis.noRotate = false;\n\tthis.noZoom = false;\n\tthis.noPan = false;\n\tthis.noRoll = false;\n\n\tthis.staticMoving = false;\n\tthis.dynamicDampingFactor = 0.2;\n\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\tthis.keys = [ 65 /*A*/, 83 /*S*/, 68 /*D*/ ];\n\n\t// internals\n\n\tthis.target = new THREE.Vector3();\n\n\tvar lastPosition = new THREE.Vector3();\n\n\tvar _state = STATE.NONE,\n\t_prevState = STATE.NONE,\n\n\t_eye = new THREE.Vector3(),\n\n\t_rotateStart = new THREE.Vector3(),\n\t_rotateEnd = new THREE.Vector3(),\n\n\t_zoomStart = new THREE.Vector2(),\n\t_zoomEnd = new THREE.Vector2(),\n\n\t_touchZoomDistanceStart = 0,\n\t_touchZoomDistanceEnd = 0,\n\n\t_panStart = new THREE.Vector2(),\n\t_panEnd = new THREE.Vector2();\n\n\t// for reset\n\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.up0 = this.object.up.clone();\n\n\t// events\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start'};\n\tvar endEvent = { type: 'end'};\n\n\n\t// methods\n\n\tthis.handleResize = function () {\n\n\t\tif ( this.domElement === document ) {\n\n\t\t\tthis.screen.left = 0;\n\t\t\tthis.screen.top = 0;\n\t\t\tthis.screen.width = window.innerWidth;\n\t\t\tthis.screen.height = window.innerHeight;\n\n\t\t} else {\n\n\t\t\tthis.screen = this.domElement.getBoundingClientRect();\n\n\t\t}\n\n\t};\n\n\tthis.handleEvent = function ( event ) {\n\n\t\tif ( typeof this[ event.type ] == 'function' ) {\n\n\t\t\tthis[ event.type ]( event );\n\n\t\t}\n\n\t};\n\n\tthis.getMouseOnScreen = function ( clientX, clientY ) {\n\n\t\treturn new THREE.Vector2(\n\t\t\t( clientX - _this.screen.left ) / _this.screen.width,\n\t\t\t( clientY - _this.screen.top ) / _this.screen.height\n\t\t);\n\n\t};\n\n\tthis.getMouseProjectionOnBall = function ( clientX, clientY ) {\n\n\t\tvar mouseOnBall = new THREE.Vector3(\n\t\t\t( clientX - _this.screen.width * 0.5 - _this.screen.left ) / (_this.screen.width*.5),\n\t\t\t( _this.screen.height * 0.5 + _this.screen.top - clientY ) / (_this.screen.height*.5),\n\t\t\t0.0\n\t\t);\n\n\t\tvar length = mouseOnBall.length();\n\n\t\tif ( _this.noRoll ) {\n\n\t\t\tif ( length < Math.SQRT1_2 ) {\n\n\t\t\t\tmouseOnBall.z = Math.sqrt( 1.0 - length*length );\n\n\t\t\t} else {\n\n\t\t\t\tmouseOnBall.z = .5 / length;\n\t\t\t\t\n\t\t\t}\n\n\t\t} else if ( length > 1.0 ) {\n\n\t\t\tmouseOnBall.normalize();\n\n\t\t} else {\n\n\t\t\tmouseOnBall.z = Math.sqrt( 1.0 - length * length );\n\n\t\t}\n\n\t\t_eye.copy( _this.object.position ).sub( _this.target );\n\n\t\tvar projection = _this.object.up.clone().setLength( mouseOnBall.y );\n\t\tprojection.add( _this.object.up.clone().cross( _eye ).setLength( mouseOnBall.x ) );\n\t\tprojection.add( _eye.setLength( mouseOnBall.z ) );\n\n\t\treturn projection;\n\n\t};\n\n\tthis.rotateCamera = function () {\n\n\t\tvar angle = Math.acos( _rotateStart.dot( _rotateEnd ) / _rotateStart.length() / _rotateEnd.length() );\n\n\t\tif ( angle ) {\n\n\t\t\tvar axis = ( new THREE.Vector3() ).crossVectors( _rotateStart, _rotateEnd ).normalize(),\n\t\t\t\tquaternion = new THREE.Quaternion();\n\n\t\t\tangle *= _this.rotateSpeed;\n\n\t\t\tquaternion.setFromAxisAngle( axis, -angle );\n\n\t\t\t_eye.applyQuaternion( quaternion );\n\t\t\t_this.object.up.applyQuaternion( quaternion );\n\n\t\t\t_rotateEnd.applyQuaternion( quaternion );\n\n\t\t\tif ( _this.staticMoving ) {\n\n\t\t\t\t_rotateStart.copy( _rotateEnd );\n\n\t\t\t} else {\n\n\t\t\t\tquaternion.setFromAxisAngle( axis, angle * ( _this.dynamicDampingFactor - 1.0 ) );\n\t\t\t\t_rotateStart.applyQuaternion( quaternion );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.zoomCamera = function () {\n\n\t\tif ( _state === STATE.TOUCH_ZOOM ) {\n\n\t\t\tvar factor = _touchZoomDistanceStart / _touchZoomDistanceEnd;\n\t\t\t_touchZoomDistanceStart = _touchZoomDistanceEnd;\n\t\t\t_eye.multiplyScalar( factor );\n\n\t\t} else {\n\n\t\t\tvar factor = 1.0 + ( _zoomEnd.y - _zoomStart.y ) * _this.zoomSpeed;\n\n\t\t\tif ( factor !== 1.0 && factor > 0.0 ) {\n\n\t\t\t\t_eye.multiplyScalar( factor );\n\n\t\t\t\tif ( _this.staticMoving ) {\n\n\t\t\t\t\t_zoomStart.copy( _zoomEnd );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_zoomStart.y += ( _zoomEnd.y - _zoomStart.y ) * this.dynamicDampingFactor;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.panCamera = function () {\n\n\t\tvar mouseChange = _panEnd.clone().sub( _panStart );\n\n\t\tif ( mouseChange.lengthSq() ) {\n\n\t\t\tmouseChange.multiplyScalar( _eye.length() * _this.panSpeed );\n\n\t\t\tvar pan = _eye.clone().cross( _this.object.up ).setLength( mouseChange.x );\n\t\t\tpan.add( _this.object.up.clone().setLength( mouseChange.y ) );\n\n\t\t\t_this.object.position.add( pan );\n\t\t\t_this.target.add( pan );\n\n\t\t\tif ( _this.staticMoving ) {\n\n\t\t\t\t_panStart = _panEnd;\n\n\t\t\t} else {\n\n\t\t\t\t_panStart.add( mouseChange.subVectors( _panEnd, _panStart ).multiplyScalar( _this.dynamicDampingFactor ) );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.checkDistances = function () {\n\n\t\tif ( !_this.noZoom || !_this.noPan ) {\n\n\t\t\tif ( _eye.lengthSq() > _this.maxDistance * _this.maxDistance ) {\n\n\t\t\t\t_this.object.position.addVectors( _this.target, _eye.setLength( _this.maxDistance ) );\n\n\t\t\t}\n\n\t\t\tif ( _eye.lengthSq() < _this.minDistance * _this.minDistance ) {\n\n\t\t\t\t_this.object.position.addVectors( _this.target, _eye.setLength( _this.minDistance ) );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.update = function () {\n\n\t\t_eye.subVectors( _this.object.position, _this.target );\n\n\t\tif ( !_this.noRotate ) {\n\n\t\t\t_this.rotateCamera();\n\n\t\t}\n\n\t\tif ( !_this.noZoom ) {\n\n\t\t\t_this.zoomCamera();\n\n\t\t}\n\n\t\tif ( !_this.noPan ) {\n\n\t\t\t_this.panCamera();\n\n\t\t}\n\n\t\t_this.object.position.addVectors( _this.target, _eye );\n\n\t\t_this.checkDistances();\n\n\t\t_this.object.lookAt( _this.target );\n\n\t\tif ( lastPosition.distanceToSquared( _this.object.position ) > 0 ) {\n\n\t\t\t_this.dispatchEvent( changeEvent );\n\n\t\t\tlastPosition.copy( _this.object.position );\n\n\t\t}\n\n\t};\n\n\tthis.reset = function () {\n\n\t\t_state = STATE.NONE;\n\t\t_prevState = STATE.NONE;\n\n\t\t_this.target.copy( _this.target0 );\n\t\t_this.object.position.copy( _this.position0 );\n\t\t_this.object.up.copy( _this.up0 );\n\n\t\t_eye.subVectors( _this.object.position, _this.target );\n\n\t\t_this.object.lookAt( _this.target );\n\n\t\t_this.dispatchEvent( changeEvent );\n\n\t\tlastPosition.copy( _this.object.position );\n\n\t};\n\n\t// listeners\n\n\tfunction keydown( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\twindow.removeEventListener( 'keydown', keydown );\n\n\t\t_prevState = _state;\n\n\t\tif ( _state !== STATE.NONE ) {\n\n\t\t\treturn;\n\n\t\t} else if ( event.keyCode === _this.keys[ STATE.ROTATE ] && !_this.noRotate ) {\n\n\t\t\t_state = STATE.ROTATE;\n\n\t\t} else if ( event.keyCode === _this.keys[ STATE.ZOOM ] && !_this.noZoom ) {\n\n\t\t\t_state = STATE.ZOOM;\n\n\t\t} else if ( event.keyCode === _this.keys[ STATE.PAN ] && !_this.noPan ) {\n\n\t\t\t_state = STATE.PAN;\n\n\t\t}\n\n\t}\n\n\tfunction keyup( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\t_state = _prevState;\n\n\t\twindow.addEventListener( 'keydown', keydown, false );\n\n\t}\n\n\tfunction mousedown( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tif ( _state === STATE.NONE ) {\n\n\t\t\t_state = event.button;\n\n\t\t}\n\n\t\tif ( _state === STATE.ROTATE && !_this.noRotate ) {\n\n\t\t\t_rotateStart = _this.getMouseProjectionOnBall( event.clientX, event.clientY );\n\t\t\t_rotateEnd.copy(_rotateStart)\n\n\t\t} else if ( _state === STATE.ZOOM && !_this.noZoom ) {\n\n\t\t\t_zoomStart = _this.getMouseOnScreen( event.clientX, event.clientY );\n\t\t\t_zoomEnd.copy(_zoomStart);\n\n\t\t} else if ( _state === STATE.PAN && !_this.noPan ) {\n\n\t\t\t_panStart = _this.getMouseOnScreen( event.clientX, event.clientY );\n\t\t\t_panEnd.copy(_panStart)\n\n\t\t}\n\n\t\tdocument.addEventListener( 'mousemove', mousemove, false );\n\t\tdocument.addEventListener( 'mouseup', mouseup, false );\n\t\t_this.dispatchEvent( startEvent );\n\n\n\t}\n\n\tfunction mousemove( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tif ( _state === STATE.ROTATE && !_this.noRotate ) {\n\n\t\t\t_rotateEnd = _this.getMouseProjectionOnBall( event.clientX, event.clientY );\n\n\t\t} else if ( _state === STATE.ZOOM && !_this.noZoom ) {\n\n\t\t\t_zoomEnd = _this.getMouseOnScreen( event.clientX, event.clientY );\n\n\t\t} else if ( _state === STATE.PAN && !_this.noPan ) {\n\n\t\t\t_panEnd = _this.getMouseOnScreen( event.clientX, event.clientY );\n\n\t\t}\n\n\t}\n\n\tfunction mouseup( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\t_state = STATE.NONE;\n\n\t\tdocument.removeEventListener( 'mousemove', mousemove );\n\t\tdocument.removeEventListener( 'mouseup', mouseup );\n\t\t_this.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction mousewheel( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tvar delta = 0;\n\n\t\tif ( event.wheelDelta ) { // WebKit / Opera / Explorer 9\n\n\t\t\tdelta = event.wheelDelta / 40;\n\n\t\t} else if ( event.detail ) { // Firefox\n\n\t\t\tdelta = - event.detail / 3;\n\n\t\t}\n\n\t\t_zoomStart.y += delta * 0.01;\n\t\t_this.dispatchEvent( startEvent );\n\t\t_this.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction touchstart( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\n\t\t\t\t_state = STATE.TOUCH_ROTATE;\n\t\t\t\t_rotateStart = _rotateEnd = _this.getMouseProjectionOnBall( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\t_state = STATE.TOUCH_ZOOM;\n\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\t_touchZoomDistanceEnd = _touchZoomDistanceStart = Math.sqrt( dx * dx + dy * dy );\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\t_state = STATE.TOUCH_PAN;\n\t\t\t\t_panStart = _panEnd = _this.getMouseOnScreen( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t_state = STATE.NONE;\n\n\t\t}\n\t\t_this.dispatchEvent( startEvent );\n\n\n\t}\n\n\tfunction touchmove( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\n\t\t\t\t_rotateEnd = _this.getMouseProjectionOnBall( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\t_touchZoomDistanceEnd = Math.sqrt( dx * dx + dy * dy )\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\t_panEnd = _this.getMouseOnScreen( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t_state = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction touchend( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\n\t\t\t\t_rotateStart = _rotateEnd = _this.getMouseProjectionOnBall( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\t_touchZoomDistanceStart = _touchZoomDistanceEnd = 0;\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\t_panStart = _panEnd = _this.getMouseOnScreen( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t_state = STATE.NONE;\n\t\t_this.dispatchEvent( endEvent );\n\n\t}\n\n\tthis.domElement.addEventListener( 'contextmenu', function ( event ) { event.preventDefault(); }, false );\n\n\tthis.domElement.addEventListener( 'mousedown', mousedown, false );\n\n\tthis.domElement.addEventListener( 'mousewheel', mousewheel, false );\n\tthis.domElement.addEventListener( 'DOMMouseScroll', mousewheel, false ); // firefox\n\n\tthis.domElement.addEventListener( 'touchstart', touchstart, false );\n\tthis.domElement.addEventListener( 'touchend', touchend, false );\n\tthis.domElement.addEventListener( 'touchmove', touchmove, false );\n\n\twindow.addEventListener( 'keydown', keydown, false );\n\twindow.addEventListener( 'keyup', keyup, false );\n\n\tthis.handleResize();\n\n};\n\nTHREE.TrackballControls.prototype = Object.create( THREE.EventDispatcher.prototype );"]},"metadata":{},"sourceType":"module"}